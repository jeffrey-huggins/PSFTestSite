@model AtriumWebApp.Web.ClinicalOps.Models.ViewModel.CareConferenceAttendanceViewModel
@using AtriumWebApp.Web.Base.Library
@{
    ViewBag.Title = "CCA Attendance";
}

<script>
    $(document).ready(function () {
        var oTable = $('#CNATable').dataTable({
            "bFilter": false,
            //"bAutoWidth": false,
            "sScrollY": "200px",
            "sDom": "frtS",
            "iDisplayLength": -1,
            "aoColumns": [
                null,
                null,
                {
                    "bVisible": false
                },
                {
                    "bSortable": false
                },
                {
                    "bSortable": false
                }
            ],
            "oLanguage": {
                "sEmptyTable": "No entries for date range selected"
            }
        });
        var nEditing = null;
        oTable.fnSort([[0, 'desc']]);

        $('#CNATable a.edit').live('click', function (e) {
            e.preventDefault();

            var nRowId = $(this).closest('tr').attr("id");
            var nRow = $(this).parents('tr')[0];
            var aData = oTable.fnGetData(nRow);

            $("#EditingId").val(nRowId);
            $("#Date").val(aData[0]);
            $("#CNAs").val(aData[2]);
        });
        $('#CNATable a.delete').live('click', function (e) {
            e.preventDefault();

            var delConfirm = confirm("Are you sure you want to delete?");
            if (delConfirm) {
                var nRowId = $(this).closest('tr').attr("id");
                var nRow = $(this).parents('tr')[0];
                var aData = oTable.fnGetData(nRow);
                $.ajax({
                    url: path + "CCAAttendance/DeleteRow",
                    dataType: "json",
                    cache: false,
                    type: 'POST',
                    data: { rowId: nRowId },
                    success: function (result) {
                        if (result.Success) {
                            oTable.fnDeleteRow(nRow);

                            if ($("#EditingId").val() == nRowId) {
                                $("#clearCCA").click();
                            }
                            SetCountDownTime(1800)
                        }
                        else {
                            alert("Error: Event not found in database");
                        }
                    },
                    error: function (data, error, errortext) {
                        alert("Server is not responding. Please reload the page and try again");
                    }
                });
            }
        });

        $(function () {
            $("#Date").datepicker({
                beforeShow: function (textbox, instance) {
                    instance.dpDiv.css({
                        marginTop: (-textbox.offsetHeight) + 'px',
                        marginLeft: textbox.offsetWidth + 'px'
                    });
                }
            });
            $("#occurredRangeTo").datepicker({
                beforeShow: function (textbox, instance) {
                    instance.dpDiv.css({
                        marginTop: '5px',
                        marginLeft: '0px'
                    });
                }
            });
            $("#occurredRangeFrom").datepicker({
                beforeShow: function (textbox, instance) {
                    instance.dpDiv.css({
                        marginTop: '5px',
                        marginLeft: '0px'
                    });
                }
            });
        });

        var validator = $("#SaveCCA").validate({
            rules: {
                Date: {
                    required: true,
                    dateFuture: true,
                    date: true
                }
            }
        });

        $(function () {
            if ($("#ToDateRangeInvalid").val() == "1") {
                alert('Error: Please enter a valid date in the Incident Date Range "To" Field (mm/dd/yyyy)');
            }
            if ($("#FromDateRangeInvalid").val() == "1") {
                alert('Error: Please enter a valid date in the Incident Date Range "From" Field (mm/dd/yyyy)');
            }
            if ($("#ToDateRangeInFuture").val() == "1") {
                alert('Error: Please enter a valid date that is not in the future in the Incident Date Range "To" Field');
            }
            if ($("#FromDateRangeInFuture").val() == "1") {
                alert('Error: Please enter a valid date that is not in the future in the Incident Date Range "From" Field');
            }
            if ($("#FromAfterTo").val() == "1") {
                alert('Error: You can not have the "From" Date after the "To" Date in the Incident Date Range Fields');
            }
        });

        $("#saveCCA").click(function () {
            if ($("#SaveCCA").valid()) {
                $.ajax({
                    url: path + "CCAAttendance/SaveCCA",
                    dataType: "json",
                    cache: false,
                    type: 'POST',
                    data: $("#SaveCCA").serialize(),
                    success: function (result) {

                        if ($("#EditingId").val() != "") {
                            var rowNumber = oTable.fnGetPosition($("#CNATable tr#" + result.CareConferenceAttendanceId)[0]);
                            oTable.fnUpdate([
                            result.ConferenceDate,
                            result.CNA,
                            result.CNAId,
                            "<a class=\"edit\" href=\"\">Edit</a>",
                            "<a class=\"delete\" href=\"\">Delete</a>"
                            ], rowNumber);
                            SetCountDownTime(1800);
                            alert("Attendance Record has been successfully saved.");
                            return true;
                        }

                        var newEntry = oTable.fnAddData([
                            result.ConferenceDate,
                            result.CNA,
                            result.CNAId,
                            "<a class=\"edit\" href=\"\">Edit</a>",
                            "<a class=\"delete\" href=\"\">Delete</a>"
                        ]);
                        var tr = oTable.fnSettings().aoData[newEntry[0]].nTr;
                        tr.setAttribute("id", result.CareConferenceAttendanceId);

                        $("#clearCCA").click();
                        SetCountDownTime(1800);
                    },
                    error: function (data, error, errortext) {
                        alert("Server is not responding. Please reload the page and try again");
                    }
                });
            }
        });

        $("#clearCCA").click(function () {
            validator.resetForm();
            $("#EditingId").val("");
            $("#Date").val("");
            $("#CNAs").val("");
        });
    });
</script>

@{
    Context.Session.TryGetObject("CCACurrentResidentName", out string residentName);
    Context.Session.TryGetObject("CCAoccurredRangeFrom", out string rangeFrom);
    Context.Session.TryGetObject("CCAoccurredRangeTo", out string rangeTo);
}
<div id="title-div">

    @if (residentName != null)
    {
        <h2 id="title" style="margin-left: 150px">CCA Attendance for @residentName</h2>
    }
    else
    {
        <h2 id="title" style="margin-left: 150px">CCA Attendance</h2>
    }
</div>
<div id="body-CCA">
    @Html.Partial("~/Views/Partial/SideBarSelectionCCA.cshtml")

    <div id="content-CCA">
        @using (Html.BeginForm("SaveCCA", "CCAAttendance", FormMethod.Post, new { id = "SaveCCA" }))
        {
            @Html.Hidden("EditingId")
            <div class="container_16">
                <div class="grid_2">&nbsp;</div>
                <div class="grid_3">@Html.Label("Date")</div>
                <div class="grid_3">@Html.Label("CNA")</div>
            </div>
            <div class="container_16 margin_separator">
                <div class="grid_2">&nbsp;</div>
                <div class="grid_3">@Html.TextBox("Date")</div>
                <div class="grid_3">@Html.DropDownList("CNAs", null, "None Attended")</div>
            </div>
            <div class="container_16">
                <div class="grid_2">&nbsp;</div>
                <div class="grid_2">
                    <button type="button" id="saveCCA">Save</button>
                </div>
                <div class="grid_2">
                    <button type="button" id="clearCCA">Clear</button>
                </div>
            </div>
        }

        <div id="CNATableWrapper">


            @using (Html.BeginForm("UpdateRange", "CCAAttendance", FormMethod.Post, new { id = "UpdateRangeCCA" }))
            {
                @Html.Label("Conference Date Range - From: ")
                @Html.TextBox("occurredRangeFrom", rangeFrom, new { @class = "dateUS", @Value = rangeFrom, size = "10" })
                @Html.Label("To: ")
                @Html.TextBox("occurredRangeTo", rangeTo, new { @class = "dateUS", @Value = rangeTo, size = "10" })
                @Html.Hidden("returnUrl", Context.UrlPath())
                <input id="submit" name="submit" type="submit" value="Update" />
            }
            @{
                string ToDateRangeInvalid;
                Context.Session.TryGetObject("ToDateRangeInvalid", out ToDateRangeInvalid);
                string ToDateRangeInFuture;
                Context.Session.TryGetObject("ToDateRangeInFuture", out ToDateRangeInFuture);
                string FromDateRangeInvalid;
                Context.Session.TryGetObject("FromDateRangeInvalid", out FromDateRangeInvalid);
                string FromDateRangeInFuture;
                Context.Session.TryGetObject("FromDateRangeInFuture", out FromDateRangeInFuture);
                string FromAfterTo;
                Context.Session.TryGetObject("FromAfterTo", out FromAfterTo);
            }

            @Html.Hidden("ToDateRangeInvalid", ToDateRangeInvalid)
            @Html.Hidden("ToDateRangeInFuture", ToDateRangeInFuture)
            @Html.Hidden("FromDateRangeInvalid", FromDateRangeInvalid)
            @Html.Hidden("FromDateRangeInFuture", FromDateRangeInFuture)
            @Html.Hidden("FromAfterTo", FromAfterTo)


            <table id="CNATable">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>CNA</th>
                        <th>CNAId</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        foreach (var cca in Model.Attendances)
                        {
                            var CNA = Model.CNAs.Find(c => c.EmployeeId == cca.EmployeeId);
                        <tr id="@cca.CareConferenceAttendanceId">
                            <td>@cca.CareConferenceDate.ToString("d")</td>
                            <td>@(CNA == null ? "None Attended" : CNA.LastName + ", " + CNA.FirstName)</td>
                            <td>@cca.EmployeeId</td>
                            <td><a class="edit" href="">Edit</a></td>
                            <td><a class="delete" href="">Delete</a></td>
                        </tr>    
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

