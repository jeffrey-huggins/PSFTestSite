@using AtriumWebApp.Models
@{
    string SOCLookbackDate;
    Context.Session.TryGetObject("SOCLookbackDate", out SOCLookbackDate);
    string SOCCurrentFacility;
    Context.Session.TryGetObject("SOCCurrentFacility", out SOCCurrentFacility);
    string SOCCurrentFacilityName;
    Context.Session.TryGetObject("SOCCurrentFacilityName", out SOCCurrentFacilityName);
    string CensusDateInvalid;
    Context.Session.TryGetObject("CensusDateInvalid", out CensusDateInvalid);
    string CensusDateInFuture;
    Context.Session.TryGetObject("CensusDateInFuture", out CensusDateInFuture);
    IList<Community> FacilityList;
    Context.Session.TryGetObject("SOCFacilityList", out FacilityList);
    IList<Patient> ResidentList;
    Context.Session.TryGetObject("SOCResidentsList", out ResidentList);
    string SOCCurrentResidentIdString;
    Context.Session.TryGetObject("SOCCurrentResidentIdString", out SOCCurrentResidentIdString);
    string SOCCurrentResidentName;
    Context.Session.TryGetObject("SOCCurrentResidentName", out SOCCurrentResidentName);
    string SOCCurrentResidentFacility;
    Context.Session.TryGetObject("CensusDateInFuture", out SOCCurrentResidentFacility);
    string SOCCurrentResidentRoom;
    Context.Session.TryGetObject("SOCCurrentResidentRoom", out SOCCurrentResidentRoom);
    string SOCCurrentResidentBirthdate;
    Context.Session.TryGetObject("SOCCurrentResidentBirthdate", out SOCCurrentResidentBirthdate);
    string SOCCurrentResidentAdmitDate;
    Context.Session.TryGetObject("SOCCurrentResidentAdmitDate", out SOCCurrentResidentAdmitDate);
    string SOCCurrentResidentCensusDate;
    Context.Session.TryGetObject("SOCCurrentResidentCensusDate", out SOCCurrentResidentCensusDate);
    string SOCCurrentResidentAdmissionDiagnosis;
    Context.Session.TryGetObject("SOCCurrentResidentAdmissionDiagnosis", out SOCCurrentResidentAdmissionDiagnosis);
    string SOCCurrentResidentDiagnosis1;
    Context.Session.TryGetObject("SOCCurrentResidentDiagnosis1", out SOCCurrentResidentDiagnosis1);
    string SOCCurrentResidentDiagnosis2;
    Context.Session.TryGetObject("SOCCurrentResidentDiagnosis2", out SOCCurrentResidentDiagnosis2);
    string SOCCurrentResidentDiagnosis3;
    Context.Session.TryGetObject("SOCCurrentResidentDiagnosis3", out SOCCurrentResidentDiagnosis3);
}

<section class="left-column-picker" style="height: 470px">
    @using (Html.BeginForm("Lookback", "StandardsOfCare", FormMethod.Post, new { id = "Lookback" }))
    {
        @Html.Label("Last Census Date:")<br />
        @Html.TextBox("LookbackDate", SOCLookbackDate, new { @class = "dateUS", size = "10" })
        @Html.Hidden("returnUrl", Context.UrlPath())
        @Html.Hidden("CurrentCommunity", SOCCurrentFacility)
        <input type="submit" value="Update" onclick="" /> 
    }
    @Html.Hidden("CensusDateInvalid", CensusDateInvalid)
    @Html.Hidden("CensusDateInFuture", CensusDateInFuture)
    @using (Html.BeginForm("SideDDL", "StandardsOfCare", FormMethod.Post, new { id = "SideDDL" }))
    {
        @Html.Label("Community:")<br />
        @Html.DropDownList("Communities", FacilityList as SelectList, new { id = "Communities" })
        <br />
        <br />
        @Html.Label("Resident:")<br />
        @Html.DropDownList("Residents", ResidentList as SelectList, "Select a Resident", new { id = "Residents", onselectedindexchanged = "this.form.submit();" })
        <br />
        @Html.Hidden("returnUrl", Context.UrlPath());
    }
    

    @Html.Hidden("CurrentResidentId", SOCCurrentResidentIdString)

    @if (!Context.Session.Contains("SOCCurrentResidentName"))
    {
        <br />
        <div style="color: red; font-weight: bold;">Please choose a Resident</div>
    }
    <br />@Html.Label("","Current Resident", new { style = "font-weight: bold" })
    <p>
        Name/Community:
        <br />@SOCCurrentResidentName
        <br />@SOCCurrentFacilityName
    </p>
    <p>Rm#: @SOCCurrentResidentRoom</p>
    <p>Birthdate: @SOCCurrentResidentBirthdate</p>
    <p>Admit Date: @SOCCurrentResidentAdmitDate</p>
    <p>Last Census Date: @SOCCurrentResidentCensusDate</p>
    <p>
        Admission Diagnosis:<br />
        @SOCCurrentResidentAdmissionDiagnosis
    </p>
    <p>
        Diagnosis:
        <br />
        1. @SOCCurrentResidentDiagnosis1
        <br />
        2. @SOCCurrentResidentDiagnosis2
        <br />
        3. @SOCCurrentResidentDiagnosis3
    </p>
</section>

<script type="text/javascript">
    $(document).ready(function () {

        var ajaxUri;
        if (document.location.pathname.charAt(document.location.pathname.length - 1) != "/") {
            ajaxUri = document.location.pathname + "/";
        } else {
            ajaxUri = document.location.pathname
        }


        $("#LookbackDate").datepicker({
            beforeShow: function (textbox, instance) {
                instance.dpDiv.css({
                    marginTop: '10px',
                    marginLeft: '0px'
                });
            }
        });
        $(function () {
            if ($("#CensusDateInvalid").val() == "1") {
                alert("Error: Please enter a valid Last Census Date (mm/dd/yyyy)");
            }
            if ($("#CensusDateInFuture").val() == "1") {
                alert("Error: You can not have a Census date that is in the future");
            }   
        });
        var currentCommunity = $("#CurrentCommunity").val();
        $("#Communities").val(currentCommunity);

        var currentResident = $("#CurrentResidentId").val();
        $("#Residents").val(currentResident);

        $("#Residents").change(function () {
            var resident = $("#Residents option:selected").val();
            if (resident != "") {
                $("#SideDDL").submit();
            }
        });
        $("#Communities").change(function () {
            ShowProgress();
            $.post(ajaxUri+"ChangeCommunityForResident", { appCode: "SOC", facilityId: $("#Communities option:selected").val() }).done(function () {
                window.location.reload();
            });
        });
    });
</script>
