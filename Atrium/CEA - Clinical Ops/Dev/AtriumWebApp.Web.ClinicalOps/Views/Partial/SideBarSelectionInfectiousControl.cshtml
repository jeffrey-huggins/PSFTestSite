@using AtriumWebApp.Web.Base.Library
@using AtriumWebApp.Models
@{
    string IFCLookbackDate;
    Context.Session.TryGetObject("IFCLookbackDate", out IFCLookbackDate);
    string IFCCurrentFacility;
    Context.Session.TryGetObject("IFCCurrentFacility", out IFCCurrentFacility);
    string CensusDateInvalid;
    Context.Session.TryGetObject("CensusDateInvalid", out CensusDateInvalid);
    string CensusDateInFuture;
    Context.Session.TryGetObject("CensusDateInFuture", out CensusDateInFuture);
    IList<Community> IFCFacilityList;
    Context.Session.TryGetObject("IFCFacilityList", out IFCFacilityList);
    IList<Patient> IFCResidentList;
    Context.Session.TryGetObject("IFCResidentList", out IFCResidentList);
    string IFCCurrentResidentIdString;
    Context.Session.TryGetObject("IFCCurrentResidentIdString", out IFCCurrentResidentIdString);
    string IFCCurrentResidentName;
    Context.Session.TryGetObject("IFCCurrentResidentName", out IFCCurrentResidentName);
    string IFCCurrentResidentFacility;
    Context.Session.TryGetObject("IFCCurrentResidentFacility", out IFCCurrentResidentFacility);
    string IFCCurrentResidentRoom;
    Context.Session.TryGetObject("IFCCurrentResidentRoom", out IFCCurrentResidentRoom);
    string IFCCurrentResidentBirthdate;
    Context.Session.TryGetObject("IFCCurrentResidentBirthdate", out IFCCurrentResidentBirthdate);
    string IFCCurrentResidentAdmitDate;
    Context.Session.TryGetObject("IFCCurrentResidentAdmitDate", out IFCCurrentResidentAdmitDate);
    string IFCCurrentResidentCensusDate;
    Context.Session.TryGetObject("IFCCurrentResidentCensusDate", out IFCCurrentResidentCensusDate);
    string IFCCurrentResidentAdmissionDiagnosis;
    Context.Session.TryGetObject("IFCCurrentResidentAdmissionDiagnosis", out IFCCurrentResidentAdmissionDiagnosis);
    string IFCCurrentResidentDiagnosis1;
    Context.Session.TryGetObject("IFCCurrentResidentDiagnosis1", out IFCCurrentResidentDiagnosis1);
    string IFCCurrentResidentDiagnosis2;
    Context.Session.TryGetObject("IFCCurrentResidentDiagnosis2", out IFCCurrentResidentDiagnosis2);
    string IFCCurrentResidentDiagnosis3;
    Context.Session.TryGetObject("IFCCurrentResidentDiagnosis3", out IFCCurrentResidentDiagnosis3);
    string ToDateRangeInvalid;
    Context.Session.TryGetObject("ToDateRangeInvalid", out ToDateRangeInvalid);
    string ToDateRangeInFuture;
    Context.Session.TryGetObject("ToDateRangeInFuture", out ToDateRangeInFuture);
    string FromDateRangeInvalid;
    Context.Session.TryGetObject("FromDateRangeInvalid", out FromDateRangeInvalid);
    string FromDateRangeInFuture;
    Context.Session.TryGetObject("FromDateRangeInFuture", out FromDateRangeInFuture);
    string FromAfterTo;
    Context.Session.TryGetObject("FromAfterTo", out FromAfterTo);
    string IFCoccurredRangeFrom;
    Context.Session.TryGetObject("IFCoccurredRangeFrom", out IFCoccurredRangeFrom);
    string IFCoccurredRangeTo;
    Context.Session.TryGetObject("IFCoccurredRangeTo", out IFCoccurredRangeTo);
}

<section class="left-column-picker" style="height: 800px">
    @using (Html.BeginForm("Lookback", "InfectionControl", FormMethod.Post, new { id = "Lookback" }))
    {
        @Html.Label("Last Census Date:")<br />
        @Html.TextBox("LookbackDate", IFCLookbackDate, new { @class = "dateUS", size = "10" })
        @Html.Hidden("returnUrl", Context.UrlPath())
        @Html.Hidden("CurrentCommunity", IFCCurrentFacility)
        <input type="submit" value="Update" onclick="" /> 
    }
    @Html.Hidden("CensusDateInvalid", CensusDateInvalid)
    @Html.Hidden("CensusDateInFuture", CensusDateInFuture)
    @using (Html.BeginForm("SideDDL", "InfectionControl", FormMethod.Post, new { id = "SideDDL" }))
    {
        @Html.Label("Community:")<br />
        @Html.DropDownList("Communities", IFCFacilityList as SelectList, new { id = "Communities" })
        <br /><br />
        @Html.Label("Resident:")<br />
        @Html.DropDownList("Residents", IFCResidentList as SelectList, "Select a Resident", new { id = "Residents", onselectedindexchanged = "this.form.submit();" })
        <br />
        @Html.Hidden("returnUrl", Context.UrlPath())
    }

    @Html.Hidden("CurrentResidentId", IFCCurrentResidentIdString)
    @Html.Hidden("CurrentResidentAdmitDate", IFCCurrentResidentAdmitDate)

    @if (IFCCurrentResidentName == null)
    {
        <br />
        <div style="color: red; font-weight: bold;">Please choose a Resident</div>
    }
    <br />
    @Html.Label("","Current Resident", new { style = "font-weight: bold" })
    <p>
        Name/Community:<br />
        @IFCCurrentResidentName<br />
        @IFCCurrentResidentFacility
    </p>
    <p>Rm#: @IFCCurrentResidentRoom</p>
    <p>Birthdate: @IFCCurrentResidentBirthdate</p>
    <p>Admit Date: @IFCCurrentResidentAdmitDate</p>
    <p>Last Census Date: @IFCCurrentResidentCensusDate</p>
    <p>
        Admission Diagnosis:<br />
        @IFCCurrentResidentAdmissionDiagnosis
    </p>
    <p>
        Diagnosis:<br />
        1. @IFCCurrentResidentDiagnosis1<br />
        2. @IFCCurrentResidentDiagnosis2<br />
        3. @IFCCurrentResidentDiagnosis3
    </p>
</section>
<script>
    $(document).ready(function () {
        $("#LookbackDate").datepicker({
            beforeShow: function (textbox, instance) {
                instance.dpDiv.css({
                    marginTop: '10px',
                    marginLeft: '0px'
                });
            }
        });
        $(function () {
            if ($("#CensusDateInvalid").val() == "1") {
                alert("Error: Please enter a valid Last Census Date (mm/dd/yyyy)");
            }
            if ($("#CensusDateInFuture").val() == "1") {
                alert("Error: You can not have a Census date that is in the future");
            }
        });


        var currentCommunity = $("#CurrentCommunity").val();
        $("#Communities").val(currentCommunity);

        var currentResident = $("#CurrentResidentId").val();
        $("#Residents").val(currentResident);

        $("#Residents").change(function () {
            var resident = $("#Residents option:selected").val();
            if (resident != "") {
                $("#SideDDL").submit();
            }
        });
        $("#Communities").change(function () {
            ShowProgress();
            $.post("./Base/ChangeCommunityForResident", { appCode: "IFC", facilityId: $("#Communities option:selected").val() }).done(function () {
                window.location.reload();
            });
        });
    });
</script>
