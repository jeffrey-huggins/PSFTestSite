@model List<SOCEvent>

<table id="window-table">
    <thead>
        <tr>
            <th>Quality Measure</th>
            <th class="occurred">Occurred</th>
            <th>Other Information</th>
            <th class="resolved">Resolved</th>
            <th>Edit</th>
            <th>Delete  </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var soc in Model)
        {
            <tr id="@soc.SOCEventId">
                <td>
                    @soc.SOCMeasure.SOCMeasureName
                </td>
                <td>@soc.OccurredDate.ToString("d")</td>
                @{  var eventSubAppCode = soc.SOCMeasure.SubAppCode;
                }
                @switch (eventSubAppCode)
                {

                    case "FALL":
                    case "FALLWI":
                        var fall = (SOCEventFall)soc;
                        if (fall != null)
                        {
                            <td>
                                @fall.FallTime.ToString("t")
                            </td>
}
                        else
                        {
                            <td></td>
}
                        break;
                    case "PRWNDPRIOR":
                    case "PRWNDAFTER":
                    case "SCWND":
                        var site = (SOCEventWound)soc;
                        if (site != null)
                        {
                            <td>
                                @site.Site
                            </td>
}
                        else
                        {
                            <td></td>
}
                        break;
                    case "RESTRAINT":
                        
                        if (soc.Restraints != null && soc.Restraints.Count > 0)
                        {
                            <td>
                                @soc.Restraints.OrderBy(a => a.AttemptedReducedDate).First().Restraint.SOCRestraintName
                            </td>
}
                        else
                        {
                            <td></td>
}
                        break;
                    case "CATHETER":
                        var catheter = (SOCEventCatheter)soc;
                        if (catheter != null)
                        {
                            <td>
                                @catheter.CatheterType.SOCCatheterTypeName
                            </td>
}
                        else
                        {
                            <td></td>
}
                        break;
                    case "ANTIPSYCH":
                        var antipsych = (SOCEventAntiPsychotic)soc;
                        if (antipsych != null)
                        {
                            <td>
                                @antipsych.Medication.AntiPsychoticMedicationName
                            </td>
}
                        else
                        {
                            <td></td>
}
                        break;
                    default:
                        <td></td>break;
                }


                @if (soc.ResolvedDate != null)
                {
                    <td>
                        @string.Format("{0:d}", soc.ResolvedDate)
                    </td>
}
                else
                {
                    <td></td>
}
                <td>
                    @Html.ActionLink("Edit", "EditEvent", new { socEventId = soc.SOCEventId, measureId = soc.SOCMeasureId, residentId = soc.PatientId }, new { @class = "edit"})
                <td><a class="delete" href="">Delete</a></td>
            </tr>    }
    </tbody>
</table>
<environment names="Development">
    <script src="~/js/SOC/SOCEventList.js" asp-append-version="true"></script>
</environment>
<environment names="Testing,Production,Training">
    <script src="~/js/SOC/SOCEventList.min.js" asp-append-version="true"></script>
</environment>