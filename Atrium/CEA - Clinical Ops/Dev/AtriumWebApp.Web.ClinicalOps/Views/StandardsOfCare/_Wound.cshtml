@model AtriumWebApp.Models.ViewModel.StandardsOfCareViewModel
<div id="wound">
    <button class="float-right" id="closeWound">X</button>
    <h2 class="margin_separator" style="text-align:center">Wound Record</h2>
    @using (Html.BeginForm("SaveWound", "StandardsOfCare", FormMethod.Post, new { id = "SaveWound", enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(m => m.PatientId)
        @Html.HiddenFor(m => m.RoomId)
        @Html.HiddenFor(m => m.PatientGroupPayerId)
        @Html.Hidden("WoundEditingId")
        @Html.Hidden("IncludeNote", false, new { @class = "IncludeNote" })
        <div class="container_16 bottom_pad">
            <div class="grid_2">&nbsp;</div>
            <div class="grid_2">@Html.Label("Date Occurred:")</div>
            <div class="grid_2 date-occurred-container"></div>
            <div class="grid_1">&nbsp;</div>
            <div class="grid_2">@Html.Label("Date Resolved:")</div>
            <div class="grid_3 date-resolved-container"></div>
        </div>
        <div class="clear">&nbsp;</div>
        <div class="container_16 bottom_pad">
            @{
        object siteFieldAttributes;
        if (Model.SOCEventWound == null)
        {
            siteFieldAttributes = new { maxlength = "32" };
        }
        else
        {
            siteFieldAttributes = new { disabled = "disabled" };
        }
            }
            <div class="grid_2">&nbsp;</div>
            <div class="grid_2">@Html.Label("Site (32 max):")</div>
            <div class="grid_2">@Html.TextBoxFor(m => m.SOCEventWound.Site, siteFieldAttributes)</div>
            <div class="grid_1">&nbsp;</div>
            <div class="grid_2">
                @Html.LabelFor(m => m.SOCEventWound.UnavoidableFlg, "Unavoidable:", new { @class = "pressure hidden" })
                @Html.Label("","Wound Description:", new { @class = "composite hidden" })
            </div>
            <div class="grid_5">
                @Html.CheckBoxFor(m => m.SOCEventWound.UnavoidableFlg, new { @class = "pressure hidden" })
                <div id="file-link-template" class=" file-link pressure hidden">
                    @if (Model.SOCEventWound != null && Model.SOCEventWoundDocuments.Count > 0)
                    {
                        foreach (var woundDoc in Model.SOCEventWoundDocuments)
                        {

                            <a href="" data-document-id="@woundDoc.SOCPressureWoundDocumentId" data-action="StreamWoundDocument">
                                @woundDoc.DocumentFileName
                            </a>
                            <button type="button" data-document-id="@woundDoc.SOCPressureWoundDocumentId" class="delete-item">&times;</button>


                        }
                    }
                    else
                    {
                        <input type="file" name="files" id="wound-document" class="fileSelection pressure hidden" disabled="disabled" />
                    }
                </div>


                @if (Model.SOCEventWound == null)
                {
                    <div class="grid_2">@Html.DropDownListFor(m => m.SOCEventWound.CompositeWoundDescribeId, (SelectList)ViewData["WoundDescriptions"], "Select a Description", new { @class = "composite hidden" })</div>
                }
                else
                {
                    <div class="grid_2">@Html.DropDownListFor(m => m.SOCEventWound.CompositeWoundDescribeId, (SelectList)ViewData["WoundDescriptions"], "Select a Description", new { @class = "composite hidden", disabled = "disabled" })</div>
                }
            </div>
        </div>
        <div class="container_16 bottom_pad">
            <div class="grid_14" style="text-align: center;">
                @Html.Label("","Admitted with wound:", new { @class = "pressure hidden" }) &nbsp;
                @if (Model.SOCEventWound == null)
                {
                    @Html.CheckBox("AdmittedWithFlg", new { @class = "pressure hidden" })
                }
                else
                {
                    @Html.CheckBox("AdmittedWithFlg", Model.SOCEventWound.AdmittedWithFlg, new { @class = "pressure hidden", disabled = "disabled" })
                }
                @Html.HiddenFor(m => m.SOCEventWound.AdmittedWithFlg)
            </div>
        </div>
        <div class="container_16 hidden pressure">
            <div class="grid_14" style="text-align: center;">
                <h5 style="margin-top: 5px;">Risk Factors/Cause</h5>
            </div>
        </div>
        <div class="container_16 bottom_pad hidden pressure">
            <div class="grid_2">&nbsp;</div>
            <div class="grid_3">@Html.LabelFor(m => m.SOCEventWound.AffectedByDiabetes, "Diabetes"): @Html.CheckBoxFor(m => m.SOCEventWound.AffectedByDiabetes)</div>
            <div class="grid_3">@Html.LabelFor(m => m.SOCEventWound.AffectedByIncontinence, "Incontinence"): @Html.CheckBoxFor(m => m.SOCEventWound.AffectedByIncontinence)</div>
            <div class="grid_3">@Html.LabelFor(m => m.SOCEventWound.AffectedByParalysis, "Paralysis"): @Html.CheckBoxFor(m => m.SOCEventWound.AffectedByParalysis)</div>
            <div class="grid_3">@Html.LabelFor(m => m.SOCEventWound.AffectedBySepsis, "Sepsis"): @Html.CheckBoxFor(m => m.SOCEventWound.AffectedBySepsis)</div>
        </div>
        <div class="container_16 bottom_pad hidden pressure">
            <div class="grid_1">&nbsp;</div>
            <div class="grid_5">@Html.LabelFor(m => m.SOCEventWound.AffectedByPeripheralVascularDisease, "Peripheral vascular disease"): @Html.CheckBoxFor(m => m.SOCEventWound.AffectedByPeripheralVascularDisease)</div>
            <div class="grid_4">@Html.LabelFor(m => m.SOCEventWound.AffectedByEndStageDisease, "End stage disease"): @Html.CheckBoxFor(m => m.SOCEventWound.AffectedByEndStageDisease)</div>
            <div class="grid_4">@Html.LabelFor(m => m.SOCEventWound.AffectedByOther, "Other"): @Html.CheckBoxFor(m => m.SOCEventWound.AffectedByOther) @Html.TextBoxFor(m => m.SOCEventWound.AffectedByOtherDescription, new { @id = "OtherDescriptionRow" })</div>
        </div>
        <button class="show-note margin_separator" style="margin-left: 410px;">Create Note</button>
        <fieldset class="note">
            <legend>Note</legend>
            <button class="dismiss-note float-right">&times;</button>
            <div class="container_16 bottom_pad">

                <div class="grid_5">@Html.Label("Date Noted:") &nbsp; @Html.TextBox("DateNoted", "", new { @class = "isDate" })</div>

                <div class=" hidden pressure">
                    @*<div class="grid_1">&nbsp;</div>*@
                    <div class="grid_4">
                        @Html.Label("Stage:") &nbsp;
                        @Html.DropDownList("Stages", null, "Choose a Stage")
                        @Html.Hidden("SelectedStage")
                        @Html.HiddenFor(x => x.WoundHighestSeverityLevel)
                    </div>
                </div>
                <div class=" hidden composite">
                    @*<div class="grid_1">&nbsp;</div>*@
                    <div class="grid_4">
                        @Html.Label("Progress", "Progress:") &nbsp;
                        @Html.DropDownList("Progress", new List<SelectListItem>
                               {
                                   new SelectListItem { Text = "Improved", Value = "Improved" },
                                   new SelectListItem { Text = "No Change", Value = "No Change", Selected = true },
                                   new SelectListItem { Text = "Deteriorated", Value = "Deteriorated" }
                               })
                    </div>
                </div>

                @*<div class="grid_1">&nbsp;</div>*@
                <div class="grid_5">
                    @Html.Label("Signature", "Signature:") &nbsp;
                    @Html.TextBox("Signature", (string)ViewBag.CurrentUserDisplayName)
                </div>
            </div>
            <div class="container_16 bottom_pad">
                <div class="grid_4">@Html.Label("Wound Description/TX:")@*@Html.Label("Treatment (256 max):")*@</div>
                <div class="grid_1">&nbsp;</div>
                <div class="grid_4">@Html.Label("Measurements (256 max):")</div>
                <div class="grid_1">&nbsp;</div>
                <div class="grid_4">@Html.Label("DrainageCheckBox", "Drainage (128 max)"): @Html.CheckBox("DrainageCheckBox")</div>
            </div>
            <div class="container_16 bottom_pad">
                <div class="grid_4">@Html.TextArea("Treatment", "", 4, 30, new { maxlength = "256" })</div>
                <div class="grid_1">&nbsp;</div>
                <div class="grid_5">
                    <div class="hidden composite">@Html.TextArea("Measurements", "", 4, 30, new { maxlength = "256" })</div>
                    <div class="hidden pressure">
                        <div class="length-field">Length: @Html.TextBox("PWLength") cm <br /></div>
                        <div class="width-field">Width: @Html.TextBox("PWWidth") cm <br /></div>
                        <div class="depth-field hidden">Depth: @Html.TextBox("PWDepth") cm <br /></div>
                    </div>
                </div>
                @*<div class="grid_1">&nbsp;</div>*@
                <div class="grid_4">@Html.TextArea("Drainage", "", 4, 30, new { @class = "hidden", maxlength = "128" })</div>
            </div>
            <div class="container_16 bottom_pad">
                <div class="grid_4">@Html.Label("Intervention: ") @Html.Label("","Include Nutritional", new { @class = "hidden pressure" })</div>
                @*<div class="grid_1">&nbsp;</div>*@
                <div class="grid_4">@Html.Label("","Relief Device (128 max):", new { @class = "hidden pressure" })</div>
                @*<div class="grid_1">&nbsp;</div>*@
                <div class="grid_2">@Html.Label("","Status:", new { @class = "hidden pressure" })</div>
                <div class="grid_4">@Html.Label("","Labs/Diagnostics (256 max):", new { @class = "hidden pressure" })</div>
            </div>
            <div class="container_16 bottom_pad">
                <div class="grid_4">@Html.TextArea("Intervention", "", 4, 25, new { maxlength = "1024" })</div>
                @*<div class="grid_1">&nbsp;</div>*@
                <div class="grid_4">@Html.TextArea("ReliefDevice", "", 4, 25, new { @class = "hidden pressure", maxlength = "128" })</div>
                @*<div class="grid_1">&nbsp;</div>*@
                <div class="grid_2">
                    @Html.DropDownList("PWStatus", new List<SelectListItem>
                               {
                                   new SelectListItem { Text = "Healing", Value = "Healing" },
                                   new SelectListItem { Text = "Unchanged", Value = "Unchanged", Selected = true },
                                   new SelectListItem { Text = "Worsening", Value = "Worsening" }
                               }, new { @class = "hidden pressure" })
                </div>
                <div class="grid_4">@Html.TextArea("LabsDiagnostic", "", 4, 25, new { @class = "hidden pressure", maxlength = "256" })</div>
            </div>
            <div class="container_16 bottom_pad hidden pressure">@* Just spacing *@</div>
            <div class="container_16 bottom_pad hidden pressure">
                <div class="grid_4">Dietary: @Html.TextBox("Dietary", "", new { @class = "isDate float-right" })</div>
                <div class="grid_1">&nbsp;</div>
                <div class="grid_4">Physician: @Html.TextBox("Physician", "", new { @class = "isDate float-right" })</div>
                <div class="grid_1">&nbsp;</div>
                <div class="grid_4">Family: @Html.TextBox("Family", "", new { @class = "isDate float-right" })</div>
            </div>
            <div class="container_16 bottom_pad hidden pressure">@* Just spacing *@</div>
            <div class="container_16 bottom_pad hidden pressure">
                <div class="grid_4">
                    Ideal body Weight: @Html.DropDownList("IdealBodyWeight", new List<SelectListItem>
                                                  {
                                                      new SelectListItem { Text = "At", Value = "At", Selected = true  },
                                                      new SelectListItem { Text = "Above", Value = "Above" },
                                                      new SelectListItem { Text = "Below", Value = "Below" }
                                                  })
                </div>
                <div class="grid_1">&nbsp;</div>
                <div class="grid_4">
                    Actual Weight: @Html.DropDownList("ActualWeight", new List<SelectListItem>
                                              {
                                                  new SelectListItem { Text = "Stable", Value = "Stable", Selected = true  },
                                                  new SelectListItem { Text = "Gaining", Value = "Gaining" },
                                                  new SelectListItem { Text = "Losing", Value = "Losing" }
                                              })
                </div>
                <div class="grid_1">&nbsp;</div>
                <div class="grid_4">
                    Food Intake: @Html.DropDownList("FoodIntake", new List<SelectListItem>
                                            {
                                                new SelectListItem { Text = "75-100%", Value = "75-100%", Selected = true  },
                                                new SelectListItem { Text = "50-75%", Value = "50-75%" },
                                                new SelectListItem { Text = "Below 50%", Value = "Below 50%" }
                                            })
                </div>

            </div>
            <div class="container_16 bottom_pad hidden pressure">
                <div class="grid_4">
                    Skin Turgor: @Html.DropDownList("SkinTurgor", new List<SelectListItem>
                                            {
                                                new SelectListItem { Text = "Good", Value = "Good", Selected = true  },
                                                new SelectListItem { Text = "Fair", Value = "Fair" },
                                                new SelectListItem { Text = "Poor", Value = "Poor" }
                                            })
                </div>
                <div class="grid_1">&nbsp;</div>
                <div class="grid_4">
                    Urine: @Html.DropDownList("Urine", new List<SelectListItem>
                                      {
                                          new SelectListItem { Text = "Adequate", Value = "Adequate", Selected = true  },
                                          new SelectListItem { Text = "Inadequate", Value = "Inadequate" }
                                      })
                </div>
                <div class="grid_1">&nbsp;</div>
                <div class="grid_4">
                    Pain Level: @Html.DropDownList("PainLevel", new List<SelectListItem>
                                      {
                                          new SelectListItem { Text = "None", Value = "None", Selected = true  },
                                          new SelectListItem { Text = "Mild 1-3", Value = "Mild 1-3" },
                                          new SelectListItem { Text = "Moderate 4-6", Value = "Moderate 4-6"  },
                                          new SelectListItem { Text = "Severe 7-10", Value = "Severe 7-10" }
                                      })
                </div>
                @*<div class="grid_1">&nbsp;</div>*@

                <div class="grid_1">&nbsp;</div>
            </div>
        </fieldset>
        <div class="container_16 bottom_pad">
            <div class="grid_6">&nbsp;</div>
            <div class="grid_2">
                <button type="button" id="saveWound">Save</button>
            </div>
            <div class="grid_2">
                <button type="button" id="clearWound">Clear</button>
            </div>
        </div>
    }

    <table id="woundsTable">
        <thead>
            <tr>
                <th>Date Noted</th>
                <th>Site</th>
                <th>Describe/Stage</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.SOCEventWound != null && Model.SOCEventWoundNotes != null)
            {
                foreach (var notes in Model.SOCEventWoundNotes)
                {
                    <tr id="@notes.SOCEventWoundNotedId">
                        <td>@notes.NotedDate.ToString("d")</td>
                        <td>@Model.SOCEventWound.Site</td>
                        @if (Model.SOCEventWound.CompositeWoundDescribeId != null)
                        {
                            <td>@Model.CompositeWoundDescriptions.Find(d => d.CompositeWoundDescribeId == Model.SOCEventWound.CompositeWoundDescribeId).CompositeWoundDescribeName</td>
                        }
                        else
                        {
                            <td>@(notes.PressureWoundStageId != null ? Model.PressureWoundStages.Find(s => s.PressureWoundStageId == notes.PressureWoundStageId).PressureWoundStageName : "")</td>
                        }
                        <td><a class="copy" href="">Copy</a></td>
                        <td><a class="edit" href="">Edit</a></td>
                        <td><a class="delete" href="">Delete</a></td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>