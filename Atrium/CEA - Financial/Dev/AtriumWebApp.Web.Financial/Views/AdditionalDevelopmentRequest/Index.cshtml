@model AtriumWebApp.Web.Financial.Models.ViewModel.ADRViewModel
@using AtriumWebApp.Web.Base.Library
@{
    ViewBag.Title = "Additional Development Request";
}

<style>
    .borderTopBottom {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
        padding: 10px 20px;
        margin: 0;
    }

    .borderEnd {
        border-right: 1px solid black;
        /*padding-right: 10px;*/
    }

    .borderStart {
        border-left: 1px solid black;
        /*padding-left: 10px;*/
    }

    #UpdateRangeADR {
        margin-left: 500px;
    }
</style>
<div class="table-cell">
    @Html.Partial("~/Views/Partial/SideBarSelectionADR.cshtml")
</div>
<div class="table-cell">
    @using (Html.BeginForm("SaveADR", "AdditionalDevelopmentRequest", FormMethod.Post, new { id = "SaveADR" }))
    {
        @Html.HiddenFor(x => x.ADR.RequestId)
        <div class="container_16">
            <div class="grid_10">
                <div class="container_16 bottom_pad">
                    <div class="grid_2">@Html.Label("First Name:")</div>
                    <div class="grid_3">@Html.TextBoxFor(x => x.ADR.FirstName, new { maxlength = "50" })</div>
                    <div class="grid_2">@Html.Label("Closed:")</div>
                    <div class="grid_2">@Html.CheckBoxFor(x => x.ADR.ClosedFlg)</div>
                </div>
                <div class="container_16 bottom_pad">
                    <div class="grid_2">@Html.Label("Last Name:")</div>
                    <div class="grid_3">@Html.TextBoxFor(x => x.ADR.LastName, new { maxlength = "50" })</div>
                    <div class="grid_2">@Html.Label("DCN:")</div>
                    <div class="grid_2">@Html.TextBoxFor(x => x.ADR.DCN, new { maxlength = "17" })</div>
                </div>
                <div class="container_16 margin_separator">
                    <div class="grid_2">@Html.Label("Medicare #:")</div>
                    <div class="grid_3">@Html.TextBoxFor(x => x.ADR.MedicareNumber, new { maxlength = "25" })</div>
                    <div class="grid_2">@Html.Label("Revised DCN:")</div>
                    <div class="grid_2">@Html.TextBoxFor(x => x.ADR.RevisedDCN, new { maxlength = "20" })</div>
                </div>
                <div class="container_16 margin_separator">
                    <div class="grid_2">&nbsp;</div>
                    <div class="grid_3">&nbsp;</div>
                    <div class="grid_2">@Html.Label("RAC Letter ID:")</div>
                    <div class="grid_2">@Html.TextBoxFor(x => x.ADR.RACLetterID, new { maxlength = "20" })</div>
                </div>
                <div class="container_16 margin_separator">
                    <div class="grid_2">&nbsp;</div>
                    <div class="grid_3">&nbsp;</div>
                    <div class="grid_2">@Html.Label("Demand Letter:")</div>
                    <div class="grid_2">@Html.TextBoxFor(x => x.ADR.DemandLetter, new { maxlength = "10" })</div>
                </div>
                <div class="container_16 margin_separator">
                    <div class="grid_2">&nbsp;</div>
                    <div class="grid_3">&nbsp;</div>
                    <div class="grid_2">@Html.Label("C2C Medicare Appeal #:")</div>
                    <div class="grid_2">@Html.TextBoxFor(x => x.ADR.C2CMedicareAppeal, new { maxlength = "12" })</div>
                </div>
                <div class="container_16 margin_separator">
                    <div class="grid_2">@Html.Label("Payer")</div>
                    <div class="grid_3">@Html.DropDownListFor(x => x.ADR.ADRPayerId, (SelectList)ViewData["Payer"])</div>
                    <div class="grid_2">@Html.Label("AR Amount:")</div>
                    <div class="grid_3">@Html.TextBoxFor(x => x.ADR.ARAmount, "{0:F}", new { id = "ARAmount", size = "15" })</div>
                </div>
                <div class="container_16">
                    <div class="grid_2 bold">@Html.Label("Service Dates")</div>
                </div>
                <div class="container_16 margin_separator bottom_pad">
                        <div class="grid_2 borderStart borderTopBottom">
                            @Html.Label("Begin")
                            @Html.TextBoxFor(x => x.ADR.ServiceBeginDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "ServiceBeginDate" })
                        </div>
                        <div class="grid_2 borderTopBottom">
                            @Html.Label("End")
                            @Html.TextBoxFor(x => x.ADR.ServiceEndDate,"{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "ServiceEndDate" })
                        </div>
                        <div class="grid_2 borderTopBottom" style="height: 39.64px;">&nbsp;</div>
                        <div class="grid_2 borderTopBottom borderEnd" style="height: 39.64px;">&nbsp;</div>
                    </div>
                    
                <div class="container_16">
                    <div class="grid_2 bold">@Html.Label("ADR Dates")</div>
                </div>
                <div class="container_16 margin_separator">
                    <div class="grid_2 borderStart borderTopBottom">
                        @Html.Label("CMS")
                        @Html.TextBoxFor(x => x.ADR.ADRCMSDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "ADRDate" })
                    </div>
                    <div class="grid_2 borderTopBottom">
                        @Html.Label("Received")
                        @Html.TextBoxFor(x => x.ADR.ADRReceivedDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "ADRReceivedDate" })
                    </div>
                    <div class="grid_2 borderTopBottom">
                        @Html.Label("Returned Mail")
                        @Html.TextBoxFor(x => x.ADR.ADRReturnMailDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "ADRReturnMailDate" })
                    </div>
                    <div class="grid_2 borderTopBottom borderEnd">
                        @Html.Label("Denial")
                        @Html.TextBoxFor(x => x.ADR.ADRDenialDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "ADRDenialDate" })
                    </div>
                </div>
                <div class="container_16">
                    <div class="grid_3 bold">@Html.Label("Redetermination Dates")</div>
                </div>
                <div class="container_16 margin_separator">
                    <div class="grid_2 borderStart borderTopBottom">
                        @Html.Label("Mail")
                        @Html.TextBoxFor(x => x.ADR.RedeterminationMailDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "RedeterminationMailDate" })
                    </div>
                    <div class="grid_2 borderTopBottom">
                        @Html.Label("Denial")
                        @Html.TextBoxFor(x => x.ADR.RedeterminationDenialDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "RedeterminationDenialDate" })
                    </div>
                    <div class="grid_3 borderTopBottom ">
                        @Html.Label("Remit Approve Date") <br/>
                        @Html.TextBoxFor(x => x.ADR.RemitApproveDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "RemitApproveDate" })
                    </div>
                    <div class="grid_1 borderTopBottom borderEnd" style="height: 39.64px;">&nbsp;</div>
                    
                </div>
                <div class="container_16">
                    <div class="grid_3 bold">@Html.Label("Reconsideration Dates")</div>
                </div>
                <div class="container_16 margin_separator">
                    <div class="grid_2 borderStart  borderTopBottom">
                        @Html.Label("Mail")
                        @Html.TextBoxFor(x => x.ADR.ReconsiderationMailDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "ReconsiderationMailDate" })
                    </div>
                    <div class="grid_2 borderTopBottom">
                        @Html.Label("Denial")
                        @Html.TextBoxFor(x => x.ADR.ReconsiderationDenialDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "ReconsiderationDenialDate" })
                    </div>
                    <div class="grid_2 borderTopBottom" style="height: 39.64px;">&nbsp;</div>
                    <div class="grid_2 borderTopBottom borderEnd" style="height: 39.64px;">&nbsp;</div>
                </div>
                <div class="container_16">
                    <div class="grid_2 bold">@Html.Label("ALJ Dates")</div>
                </div>
                <div class="container_16 margin_separator">
                    <div class="grid_2 borderStart borderTopBottom">
                        @Html.Label("Mail")
                        @Html.TextBoxFor(x => x.ADR.ALJMailDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "ALJMailDate" })
                    </div>
                    <div class="grid_2 borderTopBottom">
                        @Html.Label("Hearing")
                        @Html.TextBoxFor(x => x.ADR.ALJHearingDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "ALJHearingDate" })
                    </div>
                    <div class="grid_2 borderTopBottom">
                        @Html.Label("Denial")
                        @Html.TextBoxFor(x => x.ADR.ALJDenialDate, "{0:MM/dd/yyyy}", new { size = "10", @class = "isDate", id = "ALJDenialDate" })
                    </div>
                    <div class="grid_2 borderTopBottom borderEnd" style="height: 39.64px;">&nbsp;</div>
                </div>
                <div class="container_16">
                    <div class="grid_4">&nbsp;</div>
                    <div class="grid_1">
                        <button type="button" id="submitADR">Save</button>
                    </div>
                    <div class="grid_1">
                        <button type="button" id="clearADR">Clear</button>
                    </div>
                </div>
            </div>
            <div class="grid_6">
                <div class="container_16">
                    <div class="grid_2">
                        &nbsp;
                    </div>
                    <div class="grid_2">
                        <button type="button" id="addToNotes">Add To Notes</button>
                    </div>
                </div>
                @Html.TextArea("Notes", "", 15, 45, null)
                @{
        object requestNotesAttribute = null;
        if (!Model.CanRequestNotes)
        {
            requestNotesAttribute = new
            {
                readOnly = "true",
                style = "background-color: lightgray;"
            };
        }
                }
                @Html.TextAreaFor(x => x.ADR.RequestNotes, 22, 45, requestNotesAttribute)
            </div>
        </div>
    }
    <div class="float-left" style="margin-left: 10px;">
        @Html.Label("Include Closed Requests:") @Html.CheckBox("ClosedRequests")
        @{ 
            bool closedRequestsShown;
            Context.Session.TryGetObject("ClosedRequestsShown", out closedRequestsShown);
        }
        @Html.Hidden("ClosedRequestsShown", closedRequestsShown)
    </div>
    @using (Html.BeginForm("UpdateRange", "AdditionalDevelopmentRequest", FormMethod.Post, new { id = "UpdateRangeADR" }))
    {
        string occuredRangeFrom;
        Context.Session.TryGetObject("ADRoccurredRangeFrom", out occuredRangeFrom);
        string occuredRangeTo;
        Context.Session.TryGetObject("ADRoccurredRangeTo", out occuredRangeTo);

        @Html.Label("CMS Date Range - From: ")
        @Html.TextBox("occurredRangeFrom", occuredRangeFrom, "{0:MM/dd/yyyy}", new { @class = "isDate", @Value = occuredRangeFrom, size = "10" })
        @Html.Label("To: ")
        @Html.TextBox("occurredRangeTo", occuredRangeTo, "{0:MM/dd/yyyy}", new { @class = "isDate", @Value = occuredRangeTo, size = "10" })
        @Html.Hidden("returnUrl", Context.UrlPath());
        <input id="submit" name="submit" type="submit" value="Update" />
    }
    @{
        string ToDateRangeInvalid;
        Context.Session.TryGetObject("ToDateRangeInvalid", out ToDateRangeInvalid);
        string ToDateRangeInFuture;
        Context.Session.TryGetObject("ToDateRangeInFuture", out ToDateRangeInFuture);
        string FromDateRangeInvalid;
        Context.Session.TryGetObject("FromDateRangeInvalid", out FromDateRangeInvalid);
        string FromDateRangeInFuture;
        Context.Session.TryGetObject("FromDateRangeInFuture", out FromDateRangeInFuture);
        string FromAfterTo;
        Context.Session.TryGetObject("FromAfterTo", out FromAfterTo);
    }

    @Html.Hidden("ToDateRangeInvalid", ToDateRangeInvalid)
    @Html.Hidden("ToDateRangeInFuture", ToDateRangeInFuture)
    @Html.Hidden("FromDateRangeInvalid", FromDateRangeInvalid)
    @Html.Hidden("FromDateRangeInFuture", FromDateRangeInFuture)
    @Html.Hidden("FromAfterTo", FromAfterTo)
    <div class="container_16">
        <div class="grid_16">
            <table id="ADRTable">
                <thead>
                    <tr>
                        <th>ClosedFlg</th>
                        <th>CMS Date</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Service Begin</th>
                        <th>Service End</th>
                        <th>Medicare #</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var adr in Model.ADRForCommunity)
                    {
                        <tr id="@adr.RequestId">
                            <td>@adr.ClosedFlg</td>
                            <td>@adr.ADRCMSDate.ToString("d")</td>
                            <td>@adr.FirstName</td>
                            <td>@adr.LastName</td>
                            <td>@string.Format("{0:d}", adr.ServiceBeginDate)</td>
                            <td>@string.Format("{0:d}", adr.ServiceEndDate)</td>
                            <td>@adr.MedicareNumber</td>
                            <td><a class="edit" href="">Edit</a></td>
                            <td>
                                @if (Model.CanDelete) { 
                                    <a class="delete" href="">Delete</a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<environment names="Development">
    <script src="~/js/AdditionalDevelopmentRequest.js" asp-append-version="true"></script>
</environment>
<environment names="Testing,Production,Training">
    <script src="~/js/AdditionalDevelopmentRequest.min.js" asp-append-version="true"></script>
</environment>
