@model AtriumWebApp.Web.Financial.Models.ViewModel.PurchaseOrderIndexViewModel
@using AtriumWebApp.Web.Base.Library
@{
    ViewBag.Title = "Purchase Order";
}
<link href="~/lib/chosen/chosen.css" rel="stylesheet" />
<style>
    .ItemDescription {
        resize: none;
    }
    .delete-item,
    .delete-item-new {
        padding: 0 5px;
    }
    input[readonly], textarea[readonly] {
        background-color: lightgray;
    }
    select.input-validation-error {
        border: 1px solid red;
    }
    textarea.input-validation-error {
        border: 1px solid red;
    }
    #purchaseItems th {
        padding-right: 10px;
    }
    textarea {
        width: 100%;
    }
    .vendorModal {
        width: 700px;
        display: none;
        position: fixed;
        background-color: #EFEEEF;
        z-index: 999;
    }
    .note {
        padding-top: 6px;
        margin-bottom: 6px;
        border-top: 1px solid #949494;
        border-bottom: 1px solid #949494;
    }
    /*#VendorId {
        width: 200px;
    }*/
    /*Chosen overrides*/
    .chosen-container-single .chosen-single {
        height: 20px;
        line-height: 18px;
        padding: 0 0 4px 6px;
    }
    .chosen-container-single .chosen-single,
    .chosen-container-single .chosen-drop,
    .chosen-container-active.chosen-with-drop .chosen-single {
      border-radius: 0px;
      border-color: #707070;
      color: #212121;
    }
    .fileSelection {
        width:600px;
    }
    #formContent {
        border-bottom: 1px solid black;
        margin-bottom: 15px;
        padding-bottom: 15px;
    }
</style>
<section class="table-cell">
    @using (Html.BeginForm("UpdateCurrentCommunity", "PurchaseOrder", FormMethod.Post, new { id = "CommunitySelectionForm" }))
    {
        @Html.LabelFor(m => m.CurrentCommunity)<text>:</text><br />
        @Html.DropDownListFor(m => m.CurrentCommunity, new SelectList(Model.Communities, "CommunityId", "CommunityShortName", Model.CurrentCommunity))
        @Html.Hidden("returnUrl", Context.UrlPath());
    }
</section>
<section class="table-cell">
    <div class="container_16 margin_separator">
        <div class="grid_16">
            @if (Model.PurchaseOrder != null)
            {
                <div id="formContent">
                    @Html.Partial("Edit", Model.PurchaseOrder)
                </div>
            }
            else
            {
                <div id="formContent" style="display: none;"></div>
            }
        </div>
    </div>
    <div id="purchaseOrderHeader" class="container_16 bottom_pad">
        <div class="grid_3">
            <a asp-controller="PurchaseOrder" asp-action="Create" class="create-link" id="create">Create New Request</a>
            @*@Html.ActionLink("Create New Request", "Create", null, new { id = "create", @class = "create-link" })*@
        </div>
        @if (Model.CanManageBudget)
        {
            <div class="grid_3">
                @Html.ActionLink("Manage Budget", "Index", "Budget")
            </div>
        }
        <div class="grid_10">
            @using (Html.BeginForm("UpdateRange", "PurchaseOrder", FormMethod.Post, new { @class = "float-right" }))
            {
                @Html.Hidden("returnUrl", Context.UrlPath());
                <span>
                    Date Range - 
                    @Html.LabelFor(m => m.DateRangeFrom):
                    @*<input asp-for="DateRangeFrom.ToShortDateString()" class="isDate" size="10"/>*@
                    @Html.TextBoxFor(m => m.DateRangeFrom, new { @class = "isDate", size = "10" })
                    @Html.LabelFor(m => m.DateRangeTo):
                    @Html.TextBoxFor(m => m.DateRangeTo, new { @class = "isDate", size = "10" })
                </span>
                <input id="submit" name="submit" type="submit" value="Update" />
            }
            @{
                string ToDateRangeInvalid;
                Context.Session.TryGetObject("ToDateRangeInvalid", out ToDateRangeInvalid);
                string ToDateRangeInFuture;
                Context.Session.TryGetObject("ToDateRangeInFuture", out ToDateRangeInFuture);
                string FromDateRangeInvalid;
                Context.Session.TryGetObject("FromDateRangeInvalid", out FromDateRangeInvalid);
                string FromDateRangeInFuture;
                Context.Session.TryGetObject("FromDateRangeInFuture", out FromDateRangeInFuture);
                string FromAfterTo;
                Context.Session.TryGetObject("FromAfterTo", out FromAfterTo);
            }

            @Html.Hidden("ToDateRangeInvalid", ToDateRangeInvalid)
            @Html.Hidden("ToDateRangeInFuture", ToDateRangeInFuture)
            @Html.Hidden("FromDateRangeInvalid", FromDateRangeInvalid)
            @Html.Hidden("FromDateRangeInFuture", FromDateRangeInFuture)
            @Html.Hidden("FromAfterTo", FromAfterTo)
        </div>
    </div>
    <div id="purchaseOrderTableGroup" class="container_16">
        <div class="grid_16">
            <table id="purchaseOrderTable">
                <thead>
                    <tr>
                        <th>Purchase Id</th>
                        <th>Description</th>
                        <th>Vendor Name</th>
                        <th>Entry Date</th>
                        <th>Purchase Date</th>
                        <th>Level 2 Approved</th>
                        <th>Level 3 Approved</th>
                        <th>Level 4 Approved</th>
                        <th>Final Approval</th>
                        <th>Denied</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                    <tr id="@item.PurchaseOrderId">
                        <td>@item.PurchaseOrderId</td>
                        <td>@item.Description</td>
                        <td>@(item.Vendor != null ? item.Vendor.VendorName : "NO VENDOR")</td>
                        <td>@item.EnterDate.ToString("MM/dd/yyyy")</td>
                        <td>@item.PurchaseDate.ToString("MM/dd/yyyy")</td>
                        <td>@(item.IsLevel2Approved ? "Yes" : "No")</td>
                        <td>@(item.IsLevel3Approved ? "Yes" : "No")</td>
                        <td>@(item.IsLevel4Approved ? "Yes" : "No")</td>
                        <td>@(item.HasFinalApproval ? "Yes" : "No")</td>
                        <td>@(item.IsDenied ? "Yes" : "No")</td>
                        <td>
                            @if (item.CanBeEdited || Model.CanEdit)
                            {
                            @Html.ActionLink("Edit", "Edit", new { id = item.PurchaseOrderId }, new { @class = "edit-link" })
                            }
                            else
                            {
                            @Html.ActionLink("View", "View", new { id = item.PurchaseOrderId }, new { @class = "view-link" })
                            }
                        </td>
                        <td>
                            @if (item.CanBeDeleted || Model.CanDelete)
                            {
                            @Html.ActionLink("Delete", "Delete", new { id = item.PurchaseOrderId }, new { @class = "delete-link" })
                            }
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>
<environment names="Development">
    <script src="~/lib/jquery-form/src/jquery.form.js"></script>
    <script src="~/lib/chosen/chosen.jquery.js"></script>
    <script src="~/lib/autogrow/autogrow.js"></script>
    <script src="~/js/PurchaseOrder.js" asp-append-version="true"></script>
    <script src="~/js/ManageBudget.js" asp-append-version="true"></script>
</environment>

<environment names="Testing,Production,Training">
    <script src="~/lib/chosen/chosen.jquery.js"></script>
    <script src="~/lib/autogrow/autogrow.min.js"></script>
    <script src="~/lib/jquery-form/dist/jquery.form.min.js"></script>
    <script src="~/js/PurchaseOrder.js" asp-append-version="true"></script>
    <script src="~/js/ManageBudget.js" asp-append-version="true"></script>
</environment>

<script type="text/javascript">
    $(document).ready(function () {
        PreparePage();
    });
</script>
