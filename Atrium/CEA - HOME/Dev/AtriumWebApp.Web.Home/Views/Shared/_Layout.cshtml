@using AtriumWebApp.Web.Base.Library
@using Microsoft.AspNetCore.Http
<!DOCTYPE html>
<html>
<head>
    <meta content="IE=8; IE=9" http-equiv="X-UA-Compatible" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <environment names="Testing">
        <style>
            #banner{
                background-color:crimson !important;
            }
        </style>
    </environment>
    <environment names="Training">
        <style>
            #banner {
                background-color: green !important;
            }
        </style>
    </environment>

    <environment names="Development">
        <link href="~/lib/DataTables/media/css/jquery.dataTables.css" rel="stylesheet" />
        <link rel="stylesheet" href="~/lib/jquery-ui/themes/base/all.css" asp-append-version="true"/>
        <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
        <link rel="stylesheet" href="~/css/CustomStyle_v1.css" asp-append-version="true"/>
        <link rel="stylesheet" href="~/lib/font-awesome/css/font-awesome.css"/>
    </environment>
    <environment names="Testing,Production,Training">
        <link href="~/lib/DataTables/media/css/jquery.dataTables.css" rel="stylesheet" />
        <link rel="stylesheet" href="~/lib/jquery-ui/themes/base/all.css" />
        <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/css/CustomStyle_v1.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/lib/font-awesome/css/font-awesome.min.css" />
    </environment>

    <environment names="Development">
        <script src="~/lib/jquery/dist/jquery.js"></script>
        <script src="~/lib/DataTables/media/js/jquery.dataTables.js"></script>
        <script src="~/lib/jquery-ui/jquery-ui.js"></script>
        <script src="~/js/site.js" asp-append-version="true"></script>
        <script src="~/js/Countdown.js" asp-append-version="true"></script>
    </environment>
    <environment names="Testing,Production,Training">
        <script src="~/lib/jquery/dist/jquery.min.js">
        </script>

        <script src="~/lib/jquery-ui/jquery-ui.js"></script>
        <script src="~/lib/DataTables/media/js/jquery.dataTables.js"></script>
        <script src="~/js/site.min.js" asp-append-version="true"></script>
    </environment>

    @RenderSection("Scripts", required: false)
    <script type="text/javascript">
            $(document).ready(function () {
                var txts = document.getElementsByTagName('TEXTAREA');

                for (var i = 0, l = txts.length; i < l; i++) {
                    if (/^[0-9]+$/.test(txts[i].getAttribute("maxlength"))) {
                        var func = function () {
                            var len = parseInt(this.getAttribute("maxlength"), 10);

                            if (this.value.length > len) {
                                alert('Maximum length exceeded: ' + len);
                                this.value = this.value.substr(0, len);
                                return false;
                            }
                        }

                        txts[i].onkeyup = func;
                        //txts[i].onblur = func;
                    }
                }

                ActivateCountDown("CountDownPanel", @Context.Session.GetTimeout());
            });

            $('form').on("submit", function () {
                ShowProgress();
            });

            function ShowProgress(quick) {

                if (quick) {
                    if ($('.modal').length > 0) {
                        return;

                    }
                    var modal = $('<div />');
                    modal.addClass("modal");
                    $('body').append(modal);
                    var loading = $(".loading");
                    loading.show();
                    var top = Math.max($(window).height() / 2 - loading[0].offsetHeight / 2, 0);
                    var left = Math.max($(window).width() / 2 - loading[0].offsetWidth / 2, 0);
                    loading.css({ top: top, left: left });
                    return;
                }
                setTimeout(function () {
                    if ($('.modal').length > 0) {
                        return;

                    }
                    var modal = $('<div />');
                    modal.addClass("modal");
                    $('body').append(modal);
                    var loading = $(".loading");
                    loading.show();
                    var top = Math.max($(window).height() / 2 - loading[0].offsetHeight / 2, 0);
                    var left = Math.max($(window).width() / 2 - loading[0].offsetWidth / 2, 0);
                    loading.css({ top: top, left: left });
                }, 200);
            }
            function HideProgress() {
                setTimeout(function () {
                    if ($(".modal").val() != undefined) {
                        $(".modal").remove();
                        $(".loading").hide();
                    }
                }, 200);
            }

            function ValidateCurrency(value) {
                return /^(-)?(\d+)(\.\d{2})?$/.test(value);
            }

            function ValidateDate(value) {
                var check = false;
                var re = /^\d{1,2}\/\d{1,2}\/\d{4}$/;
                if (re.test(value)) {
                    var adata = value.split('/');
                    var mm = parseInt(adata[0], 10); // was gg (giorno / day)
                    var dd = parseInt(adata[1], 10); // was mm (mese / month)
                    var yyyy = parseInt(adata[2], 10); // was aaaa (anno / year)
                    var xdata = new Date(yyyy, mm - 1, dd);
                    if ((xdata.getFullYear() == yyyy) && (xdata.getMonth() == mm - 1) && (xdata.getDate() == dd))
                        check = true;
                    else
                        check = false;
                } else
                    check = false;
                return check;
            }

            function IsDateFuture(dateString) {
                var date = new Date(dateString);
                if (date > new Date())
                    return true;
                else
                    return false;
            }

            function ValidateHr(value) {
                var hour = parseInt(value, 10);
                if ((hour >= 1) && (hour <= 12)) {
                    return true;
                }
                return false;
            }

            function ValidateMin(value) {
                var hour = parseInt(value, 10);
                if ((hour >= 0) && (hour <= 59)) {
                    return true;
                }
                return false;
            }
    </script>
</head>
<body>
    @Html.Partial("~/Views/Shared/TopNav.cshtml")
    <noscript>
        <div>
            <h2>This site requires JavaScript</h2>
        </div>
    </noscript>
    <section class="content-wrapper main-content">
        @RenderBody()
    </section>
    <div class="loading" align="center">
        Information is being sent.<br />
        <br />
        <img src="~/Images/loader.gif" />
    </div>
    <div class="timeout" align="center">
        Your Session has ended.<br />
        <br />
        Please click OK to be redirected to the Home Page<br />
        <br />
        <button onclick="window.location = '@ViewBag.BaseUrl'">OK</button>
    </div>

    @Html.Hidden("SessionTimeout", Context.Session.GetTimeout())
    @* Keep track of the size of the session state *@
    <environment names="Development">
        <div id="debugInfo">
            <table>
                <thead>
                    <tr>
                        <th>Key</th>
                        <th>Length</th>
                        <th>Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var key in Context.Session.Keys)
                    {
                        byte[] value;
                        Context.Session.TryGetValue(key, out value);
                        <tr>
                            <td>@key</td>
                            <td>@value.Length</td>
                            <td>
                                @if (value.Length < 1000)
                                {
                                    <div>@Context.Session.GetString(key)</div>
                                }
                            </td>
                        </tr>

                    }
                </tbody>
            </table>

        </div>
        </environment>
    <footer>

    </footer>
</body>

</html>


