@using AtriumWebApp.Models
@using AtriumWebApp.Web.Base.Library
@model AtriumWebApp.Web.HR.Models.ViewModel.SidebarViewModel

<section class="left-column-picker" style="height: 800px">
    
    @using (Html.BeginForm("Lookback", Model.AppController, FormMethod.Post, new { id = "Lookback", style = "display:none;" }))
    {
        string lookbackDate;
        Context.Session.TryGetObject(Model.AppCode + "LookbackDate", out lookbackDate);
        string CurrentFacility;
        Context.Session.TryGetObject(Model.AppCode + "CurrentFacility", out CurrentFacility);
        @Html.Label("Termination Date:")<br />
        @Html.TextBox("LookbackDate", lookbackDate, new { @class = "dateUS", size = "10" })
        @Html.Hidden("returnUrl", Context.UrlPath());
        @Html.Hidden("CurrentCommunity", CurrentFacility, new { @class = "CurrentCommunity" })
        <input type="submit" value="Update" onclick="" />
        <br /><br />
    }
    @{ 
        string CensusDateInvalid;
        Context.Session.TryGetObject("CensusDateInvalid", out CensusDateInvalid);
        string CensusDateInFuture;
        Context.Session.TryGetObject("CensusDateInFuture", out CensusDateInFuture);
    }
    @Html.Hidden("CensusDateInvalid", CensusDateInvalid)
    @Html.Hidden("CensusDateInFuture", CensusDateInFuture)

    @using (Html.BeginForm(Model.SideBarDDLActionName, Model.AppController, FormMethod.Post, new { @id = "SideDDL" }))
    {
        List<Community> communities;
        Context.Session.TryGetObject(Model.AppCode + "FacilityList", out communities);
        string currentFacility;
        Context.Session.TryGetObject(Model.AppCode + "CurrentFacility", out currentFacility);
        @Html.Label("Community:")<br />
        @Html.DropDownList("Communities", new SelectList(communities, "CommunityId", "CommunityShortName"), new { @id = "Communities" })
        <br /><br />
        @Html.Label("Training Facility:")<br />
        @Html.DropDownList("TrainingFacilities", ViewData[Model.AppCode + "TrainingFacilityList"] as SelectList, "Select a Training Facility", new { @id = "TrainingFacilities" })
        <br />
        @Html.Hidden("returnUrl", Context.UrlPath());
        @Html.Hidden("CurrentCommunity", currentFacility, new { @class = "CurrentCommunity" })
    }
    @{ 
        string currentFacilityId;
        Context.Session.TryGetObject(Model.AppCode + "CurrentTrainingFacilityId", out currentFacilityId);
    }
    @Html.Hidden("CurrentTrainingFacilityId", currentFacilityId)

    
</section>

<script type="text/javascript">
    $(document).ready(function () {
        $("#LookbackDate").datepicker({
            beforeShow: function (textbox, instance) {
                instance.dpDiv.css({
                    marginTop: "10px",
                    marginLeft: "0px"
                });
            }
        });

        $(function () {
            if ($("#CensusDateInvalid").val() == "1") {
                alert("Error: Please enter a valid Termination Date (mm/dd/yyyy)");
            }
            if ($("#CensusDateInFuture").val() == "1") {
                alert("Error: You can not have a Termination date that is in the future");
            }
        });

        var currentCommunity = $("#CurrentCommunity").val();
        var currentTrainingFacility = $("#CurrentTrainingFacilityId").val();

        $("#Communities").val(currentCommunity);
        $("#TrainingFacilities").val(currentTrainingFacility);

        $("#TrainingFacilities").change(function () {
            if ($(this).val() != "") {
                $("#SideDDL").submit();
            }
        });

        $("#Communities").change(function () {
            ShowProgress();
            $.post("@Model.ChangeCommunityPath", {
                communityId: $("#Communities option:selected").val()
            }).done(function () {
                window.location.reload();
            });
        });
    });

</script>