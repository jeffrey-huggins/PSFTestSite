@using AtriumWebApp.Models
@using AtriumWebApp.Web.Base.Library
@model AtriumWebApp.Web.PayrollTransfer.Models.ViewModel.EmployeeSidebarViewModel

<section class="left-column-picker" style="height: 730px">
    <div class="DDLTerminated">
        @Html.Label("Show Terminated Employees: ")
        @Html.CheckBox("Terminated")

        @using (Html.BeginForm("Lookback", Model.AppController, FormMethod.Post, new { id = "Lookback", style = "display:none;" }))
        {
            @Html.Label("Termination Date:")<br />
            @Html.TextBox("LookbackDate", "", new { @class = "dateUS", size = "10" })
            <br /><br />
        }
    </div>
    @using (Html.BeginForm(Model.SideBarDDLActionName, Model.AppController, FormMethod.Post, new { @id = "SideDDL" }))
    {
        List<Community> communityList;
        Context.Session.TryGetObject(Model.AppCode + "FacilityList", out communityList);


        @Html.Label("Community:")<br />
        @Html.DropDownList("Communities", new SelectList(communityList, "CommunityId", "CommunityShortName"), new { @id = "Communities" })
        <br /><br />
        @Html.Label("Employee:")<br />
        @Html.DropDownList("ActiveEmployees", ViewData[Model.AppCode + "ActiveEmployeeList"] as SelectList, "Select an Employee", new { @id = "EmployeesDropdown" })
        <br />
    }
    <br />
    @Html.Label("","Current Employee", new { @style = "font-weight: bold" })
    <div id="employeeProps">
        <p>
            <b>Name/Community:</b><br />
            <span id="DDLEmpl"></span><br />
            <span id="DDLComm"></span>
        </p>
        <p>
            <b>Date of Hire:</b><br />
            <span id="DDLDoH"></span>
        </p>
        <p>
            <b>Date of Termination:</b><br />
            <span id="DDLDoT"></span>
        </p>
    </div>
</section>

<script type="text/javascript">

    $(document).ready(function () {
        if (document.ddlLoaded) {
            return;
        }
        document.ddlLoaded = true;
        $("#LookbackDate").datepicker({
            beforeShow: function (textbox, instance) {
                instance.dpDiv.css({
                    marginTop: "10px",
                    marginLeft: "0px"
                });
            }
        }).change(function (e) {
            refreshEmployeeList($(e.target).closest(".left-column-picker"));
            
        });

        $(function () {
            if ($("#CensusDateInvalid").val() == "1") {
                alert("Error: Please enter a valid Termination Date (mm/dd/yyyy)");
            }
            if ($("#CensusDateInFuture").val() == "1") {
                alert("Error: You can not have a Termination date that is in the future");
            }
        });

        var currentCommunity = $("#Communities").val();
        var currentEmployee = $("#EmployeesDropdown").val();
        if ($("#Terminated").prop("checked") == "checked") {
            toggleEmployeeLists();
        }

        $("#Terminated").click(function (event) {
            toggleEmployeeLists();
        });

        $("#Communities").change(function (event) {
            refreshEmployeeList($(event.target).closest(".left-column-picker"));
        });
        refreshEmployeeList($(".left-column-picker"));
    });

    $("#EmployeesDropdown").on("change", function (data) {
        
        if ($(this).val() != "") {
            var parent = $(data.target).closest(".left-column-picker");
            var selectedItem = $(data.target).find("option:selected");
            var selectedValue = selectedItem.val();
            parent.find("#DDLEmpl").text(selectedItem.text());
            var hireDate = new Date(selectedItem.data("hd"));
            var termDate = selectedItem.data("td");
            if (termDate) {
                
                termDate = getDateString(new Date(termDate));
                parent.find("#DDLDoT").text(termDate);
            }
            else {
                parent.find("#DDLDoT").text("");
            }
            parent.find("#DDLDoH").text(getDateString(hireDate));
        }
        
    });

    function getDateString(date) {
        var string = (date.getMonth() + 1).toString() + "/";
        string += date.getDate().toString() + "/";
        string += date.getFullYear().toString();
        return string;
    }

    function refreshEmployeeList(parent) {
        
        var terminationDate = null;
        var commId = parent.find("#Communities option:selected").val();
        if (parent.find("#Terminated").prop("checked")) {
            terminationDate = parent.find("#LookbackDate").val();
        }
        $.post("@Model.ChangeCommunityPath", {
            communityId: parent.find("#Communities option:selected").val(),
            terminationDate: terminationDate
        }).done(function (result) {
            if (result.success == false) {
                
                return;
            }
            var employeeDropdown = parent.find("#EmployeesDropdown");
            employeeDropdown.html("");
            var optionHTML = "<option value=''>Select an Employee</option>";

            //Clear list
            employeeDropdown[0].options[0] = new Option("Select an Employee", "");
            for (x = 0; x < result.length; x++) {
                employeeDropdown[0].options[x + 1] = new Option(result[x].Text, result[x].Value);
                $(employeeDropdown[0].options[x + 1]).data("gl-id", result[x].JobClassID);
                $(employeeDropdown[0].options[x + 1]).data("hd", result[x].HireDate);
                $(employeeDropdown[0].options[x + 1]).data("td", result[x].TermDate);
            }
            parent.find("#DDLDoH").text("");
            parent.find("#DDLDoT").text("");
            parent.find("#DDLEmpl").text("");
            parent.find("#EmployeesDropdown").trigger("change");
            
            //window.location.reload();
        });

    }

    function toggleEmployeeLists() {
        if ($("#Terminated").is(":checked")) {
            $("#Lookback").show();
        } else {
            $("#Lookback").hide();
        }
    }
</script>