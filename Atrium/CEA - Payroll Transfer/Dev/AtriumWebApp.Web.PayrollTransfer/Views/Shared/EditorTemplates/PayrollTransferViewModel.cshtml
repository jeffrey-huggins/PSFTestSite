@model AtriumWebApp.Web.PayrollTransfer.Models.ViewModel.PayrollTransferViewModel
@{
    var sourceGLAccounts = Model.GLAccounts;

    if (Model.Employee != null)
    {
        var allJobClasses = Model.Employee.JobClasses;
        sourceGLAccounts = allJobClasses.Select(a => a.GLAccount).Distinct().ToList();
    }
    var sourceGlList = new SelectList(sourceGLAccounts.Select(a => new SelectListItem()
    {
        Text = a.AccountNbr + " - " + a.AccountName,
        Value = a.GeneralLedgerId.ToString()
    }).OrderBy(a => a.Text), "Value", "Text", Model.SourceGLAccount);
    //var sourceGL = Model.GLAccounts.Where(a => a.)
}
<div class="payroll-transfer-item">
    @*<div class="hidden">*@
    @Html.HiddenFor(m => m.Id, new { @class = "item-id" })
    <div class="editor-field">
        @Html.Label("Source Community")
        @Html.DropDownListFor(m => m.SourceCommunity, new SelectList(Model.Communities, "CommunityId", "CommunityShortName", Model.SourceCommunity), "Select a Community", new { @class = "source-community", disabled = "disabled" })
        @Html.HiddenFor(m => m.SourceCommunityId)
        @Html.ValidationMessageFor(m => m.EmployeeId)
    </div>
    <div class="editor-field">
        @Html.Label("Employee:")
        @Html.DropDownList("ActiveEmployees", ViewData[Model.AppCode + "ActiveEmployeeList"] as SelectList, "Select an Employee", new { @id = "ActiveEmployees", @class = "employee-list", disabled = "disabled" })
        @Html.HiddenFor(m => m.EmployeeId, new { @class = "employee-id" })

    </div>

    <div class="editor-field">
        @Html.Label("Source General Ledger")
        @Html.DropDownListFor(m => m.SourceGeneralLedgerId, sourceGlList, "Select a Job Role", new { @class = "source-ledger" })
        @Html.ValidationMessageFor(m => m.SourceGeneralLedgerId)
    </div>
    @*</div>*@

    <div>
        <div>
            @Html.DisplayFor(m => m.Employee.LastName)
        </div>
        <div class="editor-field">
            @Html.Label("Transfer Date")
            @Html.TextBoxFor(m => m.TransferDate, "{0:d}", new { @id = "TransferDate", size = "10", maxlength = 10, @class = "isDate transfer-date" })
            @*@Html.ValidationMessageFor(m => m.TransferDate)*@
        </div>


        <div class="editor-field">
            @Html.Label("Destination Community")
            @Html.DropDownListFor(m => m.DestinationCommunity, new SelectList(Model.Communities, "CommunityId", "CommunityShortName", Model.DestinationCommunity), "Select a Community", new { @class = "destination-community" })
            @Html.HiddenFor(m => m.DestinationCommunityId)
            @Html.ValidationMessageFor(m => m.DestinationCommunityId)
        </div>

        <div class="editor-field">
            @Html.Label("Destination General Ledger")
            @Html.DropDownListFor(m => m.DestinationGLAccount, new SelectList(Model.GLAccounts.Select(a => new SelectListItem()
       {
           Text = a.AccountNbr + " - " + a.AccountName,
           Value = a.GeneralLedgerId.ToString()
       }).OrderBy(a => a.Text), "Value", "Text", Model.DestinationGLAccount), "Select a Job Role", new { @class = "destination-ledger" })
            @Html.HiddenFor(m => m.DestinationGeneralLedgerId)
            @Html.ValidationMessageFor(m => m.DestinationGeneralLedgerId)
        </div>

        <div class="editor-field">
            @Html.Label("Hours")
            @Html.TextBoxFor(m => m.HourCnt, new { size = "10", Value = String.Format("{0:F}", Model.HourCnt) })
            @Html.ValidationMessageFor(m => m.HourCnt)
        </div>

        <div class="editor-field">
            @Html.Label("Dollars")
            @Html.TextBoxFor(m => m.PayAmt, new { size = "10", Value = String.Format("{0:F}", Model.PayAmt) })
            @Html.ValidationMessageFor(m => m.PayAmt)
        </div>

        <div class="editor-field">
            @Html.Label("PayType")
            @Html.DropDownListFor(m => m.PayType, new List<SelectListItem>
                                                        {
                                                            new SelectListItem {Text = "Regular", Value = "Regular", Selected = true},
                                                            new SelectListItem {Text = "Overtime", Value = "Overtime"}
                                                        })
            @Html.ValidationMessageFor(m => m.PayType)
        </div>

        <div class="editor-field a-center">
            @Html.Label("PBJ Only")
            @Html.EditorFor(m => m.PBJOnlyFlg)
            @Html.ValidationMessageFor(m => m.PBJOnlyFlg)
        </div>
    </div>
</div>
