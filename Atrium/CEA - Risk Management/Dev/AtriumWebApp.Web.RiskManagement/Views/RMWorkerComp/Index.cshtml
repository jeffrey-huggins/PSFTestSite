@model AtriumWebApp.Web.RiskManagement.Models.ViewModel.RMWorkerCompViewModel
@using AtriumWebApp.Web.Base.Library
@{
    ViewBag.Title = "Worker's Compensation Claim";
    Context.Session.SetTimeout(30);
    string RMWCurrentEmployeeName;
    Context.Session.TryGetObject("RMWCurrentEmployeeName", out RMWCurrentEmployeeName);
}

<div>
    @if (Context.Session.Contains("RMWCurrentEmployeeName"))
    {
        <h2 id="title">Workers Compensation Claim for
            <br />@RMWCurrentEmployeeName</h2>
    }
    else
    {
        <h2 id="title">Workers Compensation Claim</h2>
    }
</div>
<div id="body-RMW" class="layout-1378">
    @using (Html.BeginForm("SaveClaimDetails", "RMWorkerComp", FormMethod.Post, new { id = "SaveClaimDetails" }))
    {
        <div class="row">
            <div class="col8">
                <div class="row">
                    <div class="col4">
                        @Html.ActionLink("Return to Comp Claims Table", "CurrentClaims", "RMWorkerComp", null, new { style = "font-size: 1.4em" })
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row bottom_pad">
                    <div class="col2 suffix_2 bold">
                        @Html.Label("Claim Number:")
                    </div>
                    <div class="col2 pull_2" style="font-size: 1.2em">
                        @Html.DisplayFor(x => x.CompClaim.ClaimNum)
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2 bold">
                        @Html.Label("Injury:")
                    </div>
                    <div class="col2 ">
                        @string.Format("{0:d}", Model.CompClaim.InjuryDate)
                        &nbsp;
                    </div>
                    <div class="col2 bold">
                        @Html.Label("Reported to Carrier:")
                    </div>
                    <div class="col2" style="height: 22px;">
                        @Html.TextBoxFor(x => x.CompClaim.ReportedtoCarrierDate, "{0:MM/dd/yyyy}", new { id = "ReportedToCarrier", size = "6" })
                        &nbsp;
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2 bold">
                        @Html.Label("FROI:")
                    </div>
                    <div class="col2 " style="height: 22px;">
                        @Html.TextBoxFor(x => x.CompClaim.FROIDate, "{0:MM/dd/yyyy}", new { id = "FROI", size = "6" })
                        &nbsp;
                    </div>
                    <div class="col2 bold">
                        @Html.Label("Settlement:")
                    </div>
                    <div class="col2">
                        @string.Format("{0:d}", Model.CompClaim.SettlementDate)
                        &nbsp;
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2 bold">
                        @Html.Label("Last Worked:")
                    </div>
                    <div class="col2">
                        @string.Format("{0:d}", Model.CompClaim.LastWorkedDate)
                        &nbsp;
                    </div>
                    <div class="col2 bold">
                        @Html.Label("Closed:")
                    </div>
                    <div class="col2">
                        @if (Model.CompClaim.ClosedDate.HasValue)
                        {
                            @string.Format("{0:d}", Model.CompClaim.ClosedDate.Value)
                        }
                        &nbsp;
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row margin_separator">
                    <div class="col2 bold">
                        @Html.Label("Lawsuit Opened:")
                    </div>
                    <div class="col2">
                        @string.Format("{0:d}", Model.CompClaim.LawsuitClosedDate)
                        &nbsp;
                    </div>
                    <div class="col2 bold">
                        @Html.Label("Lawsuit Closed:")
                    </div>
                    <div class="col2">
                        @string.Format("{0:d}", Model.CompClaim.LawsuitClosedDate)
                        &nbsp;
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
            </div>
            <div class="col8">
                <div class="row">
                    <div class="col1">
                        @Html.CheckBoxFor(x => x.CompClaim.PreventableFlg)
                    </div>
                    <div class="col4">
                        @Html.Label("Preventable")
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col6">
                        @Html.TextAreaFor(x => x.CompClaim.PreventableComments, 2, 40, new { style = "visibility: hidden", disabled = "disabled" })
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col1">
                        @Html.CheckBoxFor(x => x.CompClaim.HighExposureFlg)
                    </div>
                    <div class="col4">
                        @Html.Label("High Exposure")
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col6">
                        @Html.TextAreaFor(x => x.CompClaim.HighExposureComments, 2, 40, new { style = "visibility: hidden", disabled = "disabled" })
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
            </div>
            <div class="row-end">&nbsp;</div>

        </div>
        <div class="row">
            <div class="col2 suffix_2 bold">
                @Html.Label("Claim Physician:")
            </div>
            <div class="col2 pull_2">
                @Html.DisplayFor(x => x.CompClaim.ClaimPhysician)
            </div>
            <div class="row-end">&nbsp;</div>
        </div>
        <div class="row margin_separator" style="overflow: hidden">
            <div class="col6">
                <div class="centerInGrid bottom_pad">
                    @Html.Label("","Claim Description:", new { @class = "bold" })<br />
                    @Html.TextAreaFor(x => x.CompClaim.ClaimDescription, 4, 47, new { disabled = "disabled" })
                </div>
                <div class="centerInGrid row">
                    <div class="col2 suffix_2 bold">
                        @Html.Label("Claim Type:")
                    </div>
                    <div class="col2 pull_2">
                        @Html.DropDownListFor(x => x.CompClaim.ClaimTypeId, (SelectList)ViewData["ClaimTypes"], "Select a Claim Type")
                    </div>
                </div>
            </div>
            <div class="col6">
                <div class="centerInGrid">
                    @Html.Label("","Claim Diagnosis:", new { @class = "bold" })<br />
                    <table id="diagnosisTable">
                        <thead>
                            <tr>
                                <th style="padding-left: 0">Diagnosis Code</th>
                                <th>Diagnosis Name</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.DiagnosesForClaim != null)
                            {
                                foreach (var diagnosis in Model.DiagnosesForClaim)
                                {
                                    var diagnosisType = Model.DiagnosisTypes.Single(d => d.DiagnosisId == diagnosis.DiagnosisId);
                                <tr>
                                    <td>@diagnosisType.DiagnosisCd
                                    </td>
                                    <td>
                                        @diagnosisType.DiagnosisDesc.Substring(0, (diagnosisType.DiagnosisDesc.Length > 25 ? 25 : diagnosisType.DiagnosisDesc.Length))
                                        @if (diagnosisType.DiagnosisDesc.Length > 25)
                                        {
                                            <br />
                                            <a class="moreNotes" href="">More...</a>
                                        }
                                    </td>
                                    <td>
                                        @diagnosisType.DiagnosisDesc
                                    </td>
                                </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="row-end">&nbsp;</div>
        </div>
        
        @Html.HiddenFor(x => x.CompClaim.ClaimId)
        <div class="row margin_separator border_top">
            <div class="col6">
                <div class="centerInGrid">
                    <div>
                        @Html.Label("","Light Duty:", new { @class = "bold" })
                    </div>
                    <div class="bottom_pad">
                        @Html.Label("Begin: ")@Html.EditorFor(x => x.CompClaim.LightDutyBeginDate, new { id = "CompClaim_LightDutyBeginDate" })
                        @Html.Label("End: ")@Html.EditorFor(x => x.CompClaim.LightDutyEndDate, new { id = "CompClaim_LightDutyEndDate" })
                    </div>
                    <div>
                        @Html.Label("","Full Duty:", new { @class = "bold" })
                    </div>
                    <div>
                        @Html.Label("Begin: ")@Html.EditorFor(x => x.CompClaim.FullDutyBeginDate, new { id = "CompClaim_FullDutyBeginDate" })
                        @Html.Label("End: ")@Html.EditorFor(x => x.CompClaim.FullDutyEndDate, new { id = "CompClaim_FullDutyEndDate" })
                    </div>
                </div>
            </div>
            <div class="col6">
                <div class="centerInGrid">
                    <div class="row">
                        <div class="col2">
                            @Html.Label("Insurance Carrier:")
                        </div>
                        <div class="col2">
                            @Html.DropDownList("Insurance", null, new { value = Model.CompClaim.InsuranceCarrierId })
                            @Html.HiddenFor(x => x.CompClaim.InsuranceCarrierId)
                        </div>
                        <div class="row-end"></div>
                    </div>
                    <div class="row">
                        <div class="col2">
                            @Html.CheckBoxFor(x => x.CompClaim.LegalFirmFlg)@Html.Label("Litigated:")
                        </div>
                        <div class="col2">
                            @Html.DropDownList("Litigated", null, new { style = "visibility: hidden", disabled = "disabled", value = (Model.CompClaim.LegalFirmID == null ? "1" : Model.CompClaim.LegalFirmID.ToString()) })
                            @Html.HiddenFor(x => x.CompClaim.LegalFirmID)
                        </div>
                        <div class="row-end"></div>
                    </div>
                    <div class="row">
                        <div class="col2">
                            @Html.CheckBoxFor(x => x.CompClaim.VOCRehabFlg)@Html.Label("VOC Rehab:")
                        </div>
                        <div class="col2">
                            @Html.DropDownList("VOCRehab", null, new { style = "visibility: hidden", disabled = "disabled", value = Model.CompClaim.VOCRehabID })
                            @Html.HiddenFor(x => x.CompClaim.VOCRehabID)
                        </div>
                        <div class="row-end"></div>
                    </div>
                    <div class="row">
                        <div class="col2">
                            @Html.CheckBoxFor(x => x.CompClaim.TCMFlg)@Html.Label("TCM:")
                        </div>
                        <div class="col2">
                            @Html.DropDownList("TCM", null, new { style = "visibility: hidden", disabled = "disabled", value = Model.CompClaim.TCMId })
                            @Html.HiddenFor(x => x.CompClaim.TCMId)
                        </div>
                        <div class="row-end"></div>
                    </div>
                </div>
            </div>
            <div class="row-end">&nbsp;</div>
        </div>
        <div class="row margin_separator">
            <div class="col5">&nbsp;</div>
            <div class="col2">
                <input type="submit" value="Save" id="saveButton" style="float: left" />
                <button type="reset" class="cancel" style="float: left; margin-left: 15px;">Clear</button>
            </div>
            <div class="row-end">&nbsp;</div>
        </div>
    }
    <div class="row border_top">
        <div class="col8">
            <div>
                @using (Html.BeginForm("SaveNotes", "RMWorkerComp", FormMethod.Post, new { id = "SaveNotes" }))
                {
                    @Html.Hidden("NotesId")
                    @Html.Label("","Notes:", new { @class = "bold" })<br />
                    @Html.TextArea("UNotes", new { rows = "4", cols = "55" })
                    <input id="btnAddNotes" type="submit" value="Add" />
                }
            </div>
        </div>
        <div class="col6" style="position: relative;">
            <div style="position: absolute; right: 0; bottom: -90px;">
                @Html.Label("Show Expense Type: ")
                <select id="expenseType">
                    <option value="">All Expenses</option>
                    @if (Model != null && Model.Expenses != null)
                    {
                        var typesList = new List<string>();
                        foreach (var expenseType in Model.Expenses)
                        {
                            if (typesList.Count(t => t == expenseType.ExpenseType) > 0)
                            {
                                continue;
                            }
                        <option val="@expenseType.ExpenseType">@expenseType.ExpenseType</option>
                            typesList.Add(expenseType.ExpenseType);
                        }
                    }
                </select>
            </div>
        </div>
        <div class="row-end">&nbsp;</div>
    </div>
    <div class="row">
        <div class="col8">
            <table id="NotesTable">
                <thead>
                    <tr>
                        <th>User</th>
                        <th>Date</th>
                        <th>Notes</th>
                        <th>NotesHidden</th>
                        <th>Edit</th>
                        <th>Delete</th>
                        <th>NoteId</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Notes != null)
                    {
                        foreach (var note in Model.Notes)
                        {
                        <tr id="@note.ClaimNoteId">
                            <td>@note.UserName</td>
                            <td>@note.InsertedDate.ToString("g")</td>
                            <td>@note.Notes.Substring(0, (note.Notes.Length > 100 ? 100 : note.Notes.Length))
                                @if (note.Notes.Length > 100)
                                {
                                    <br />
                                    <a class="moreNotes" href="">More...</a>
                                }
                            </td>
                            <td>@note.Notes.Replace("\r\n", "\n")</td>
                            <td><a class="edit" href="">Edit</a></td>
                            <td><a class="delete" href="">Delete</a></td>
                            <td>@note.ClaimNoteId</td>
                        </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="col6">
            <table id="expensesTable">
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>Date</th>
                        <th>Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Expenses != null)
                    {
                        foreach (var expense in Model.Expenses)
                        {
                        <tr>
                            <td>@expense.ExpenseType</td>
                            <td>@expense.ExpenseDate.ToString("d")</td>
                            <td>@expense.ExpenseAmt.ToString("C")</td>
                        </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="row-end">&nbsp;</div>
    </div>
</div>
<environment names="Development">
    <script src="~/js/WorkersComp.js" asp-append-version="true"></script>
</environment>
<environment names="Testing,Production,Training">
    <script src="~/js/WorkersComp.min.js" asp-append-version="true"></script>
</environment>
