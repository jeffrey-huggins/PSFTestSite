function getMomentDate(n){var t=moment(n,"MM/DD/YYYY",!0);return t.isValid()||(t=moment(n,"M/DD/YYYY",!0)),t.isValid()||(t=moment(n,"MM/D/YYYY",!0)),t.isValid()||(t=moment(n,"M/D/YYYY",!0)),t}function getMomentDateTime(n){var t=moment(n,"MM/DD/YYYY hh:mm a",!0);return t.isValid()||(t=moment(n,"M/DD/YYYY hh:mm a",!0)),t.isValid()||(t=moment(n,"MM/D/YYYY hh:mm a",!0)),t.isValid()||(t=moment(n,"M/D/YYYY hh:mm a",!0)),t}function checkDateTime(n){var t=getMomentDateTime(n);if(t.isValid()){if(moment().diff(t)<0)return"infuture"}else return"invalid";return"ok"}function checkDate(n){var t=getMomentDate(n);if(t.isValid()){if(moment().diff(t)<0)return"infuture"}else return"invalid";return"ok"}$.validator.addMethod("date",function(n,t){var i=checkDate(n);return this.optional(t)||i!="invalid"},"Please enter a valid date (mm/dd/yyyy)");$.validator.addMethod("money",function(n,t){return this.optional(t)||/^(-)?(\d+)(\.\d{2})?$/.test(n)},"Must be in US currency format");$.validator.addMethod("date-future",function(n,t){var i=checkDate(n);return this.optional(t)||i==="ok"},"Date cannot be in the future");$.validator.addMethod("date-before",function(n,t){var r=$(t).attr("date-before-field"),i,u,f;return r==""?(console.error("date-before rule requires an id be supplied to date-before-field attribute."),!0):(i=$(r).val(),i==="")?!0:(u=getMomentDate(n),f=getMomentDate(i),u<=f)},function(n,t){return $(t).attr("date-before-message")});