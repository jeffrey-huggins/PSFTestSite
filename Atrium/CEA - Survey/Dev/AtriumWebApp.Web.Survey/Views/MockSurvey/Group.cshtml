@model AtriumWebApp.Web.Survey.Models.ViewModel.MockSurveyGroupViewModel
@using AtriumWebApp.Models
@{
    ViewBag.Title = Model.Title;
}
<style>
    #citationWindow {
        width: 865px;
        height: 550px;
        display: none;
        position: fixed;
        background-color: #EFEEEF;
        z-index: 999;
    }
        #citationWindow h2 {
            text-align: center;
        }
</style>
@Html.ActionLink("Back to Survey", "Index")
<h2>@ViewBag.Title</h2>
<table id="deficiencies">
    <thead>
        <tr>
            <th>Tag</th>
            <th></th>
            <th>Description</th>
            <th></th>
            <th>Instructions</th>
            <th></th>
            <th>Severity</th>
            <th></th>
            <th>Finding Details</th>
            <th>Citation</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Deficiencies)
        {
            <tr id="@item.DeficiencyId" data-full-description="@item.Description" data-full-instructions="@item.Instructions" data-full-details="@(item.Citation == null ? string.Empty : item.Citation.FindingDetails)">
                <td>@item.Tag</td>
                <td>
                    @item.Description
                    <a class="lessDesc float-right" href="">Less...</a>
                </td>
                <td>
                    @item.Description.Truncate(60, true)
                    @if (item.Description.LengthExceeds(60))
                    {
                        <a class="moreDesc float-right" href="">More...</a>
                    }
                </td>
                <td>
                    @item.Instructions
                    <a class="lessInst float-right" href="">Less...</a>
                </td>
                <td>
                    @if (item.Instructions != null)
                    {
                        @item.Instructions.Truncate(60, true)
                        if (item.Instructions.LengthExceeds(60))
                        {
                            <a class="moreInst float-right" href="">More...</a>
                        }
                    }
                </td>
                <td>@(item.Citation == null ? string.Empty : item.Citation.CitationId.ToString())</td>
                <td>@(item.Citation == null ? string.Empty : item.Citation.MockSeverity)</td>
                <td>
                    @(item.Citation == null ? string.Empty : item.Citation.FindingDetails)
                    <a class="lessDetail float-right" href="">Less...</a>
                </td>
                <td>
                    @if (item.Citation != null)
                    {
                        @item.Citation.FindingDetails.Truncate(60, true)
                        if (item.Citation.FindingDetails.LengthExceeds(60))
                        {
                            <a class="moreDetail float-right" href="">More...</a>
                        }
                    }
                </td>
                <td>
                    @if (item.Citation == null)
                    {
                        <button class="create">Create</button>
                    }
                    else
                    {
                        <button class="edit">Edit</button>
                        <button class="delete">Delete</button>
                    }
                </td>
            </tr>   
        }
    </tbody>
</table>
<div class="margin_separator"></div>
<div id="citationWindow">
    <button class="float-right" id="close">X</button>
    <h2>Citation</h2>
    @using (Html.BeginForm("SaveCitation", "MockSurvey", FormMethod.Post, new { id = "SaveCitation" }))
    {
        @Html.HiddenFor(m => m.MockSurveyId)
        @Html.HiddenFor(m => m.GroupType)
        @Html.Hidden("CitationId")
        @Html.Hidden("DeficiencyId")
        <div class="container_16">
            <div class="grid_3">@Html.Label("Tag", "Tag:")</div>
            <div class="grid_5">@Html.Label("Description", "Description:")</div>
        </div>
        <div class="container_16 margin_separator">
            <div class="grid_3">@Html.TextBox("Tag", "", new { readOnly = "true", style = "background-color: lightgray", size = "5" })</div>
            <div class="grid_5">@Html.TextArea("Description", "", 12, 80, new { readOnly = "true", style = "background-color: lightgray" })</div>
        </div>
        <div class="container_16">
            <div class="grid_3">@Html.Label("MockSeverity", "Severity:")</div>
            <div class="grid_5">@Html.Label("FindingDetails", "Finding Details (2048 max):")</div>
        </div>
        <div class="container_16 margin_separator">
            <div class="grid_3">
                @Html.DropDownList("MockSeverity", AtriumWebApp.Web.Survey.Models.ViewModel.CitationViewModel.ValidSeverities.Select(s => new SelectListItem { Value = s, Text = s }))
            </div>
            <div class="grid_5">@Html.TextArea("FindingDetails", "", 12, 80, new { maxlength = "2048" })</div>
        </div>
        <div class="container_16">
            <div class="grid_5">&nbsp;</div>
            <div class="grid_2">
                <button type="button" id="saveCitation" class="float-right">Save</button>
            </div>
            <div class="grid_2">
                <button type="button" id="clearCitation">Clear</button>
            </div>
        </div>
    }
</div>
<environment names="Development">
    <script src="~/js/MockSurveyEdit.js" asp-append-version="true"></script>
</environment>
<environment names="Testing,Production,Training">
    <script src="~/js/MockSurveyEdit.min.js" asp-append-version="true"></script>
</environment>
<script type="text/javascript">
    $(document).ready(function () {
        PreparePage();
    });
</script>
