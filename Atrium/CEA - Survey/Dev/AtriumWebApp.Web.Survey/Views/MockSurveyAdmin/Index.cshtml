@model AtriumWebApp.Web.Survey.Models.ViewModel.MockSurveyAdminViewModel
@using AtriumWebApp.Models
@{
    ViewBag.Title = "Customer Service and Compliance Survey Admin";
}
<style>
    .dataTables_wrapper {
        border: solid thin black;
    }

    .dataTables_scrollBody {
        overflow: auto;
        height: auto !important;
        max-height: 300px;
        width: 100%;
    }

    #DeficienciesWrapper {
        max-width: 100%;
    }

        #DeficienciesWrapper h3 {
            margin-bottom: -20px;
        }

        #DeficienciesWrapper .Group {
            max-width: 150px;
        }


    .content-wrapper {
        max-width: 1366px;
    }

    #NewDeficiencyGroup {
        margin-top: 6px;
    }

    .validation-summary-errors ul {
        margin: 0 0 0 20px;
        padding: 0 0 0 20px;
    }

    #recipientsModal {
        width: 600px;
        height: 450px;
        display: none;
        position: fixed;
        background-color: #EFEEEF;
        z-index: 999;
    }
</style>

<h2>@ViewBag.Title</h2>
<div id="tabs" style="min-height:500px;">
    <ul class="adminTabNav">
        <li>
            <a href="#CommunityTableWrapper">Communities</a>
        </li>
        <li>
            <a href="#DeficienciesWrapper">Federal Deficiencies</a>
        </li>
        <li>
            <a href="#safeDef">Safety Deficiencies</a>
        </li>
        <li>
            <a href="#DeficiencyGroupsWrapper">Deficiency Groups</a>
        </li>
    </ul>
    <div id="admin-body">
        <div id="DeficienciesWrapper">
            <table id="federalDeficiencies">
                <thead>
                    <tr>
                        <th>Tag</th>
                        <th>FullDescription</th>
                        <th>Description</th>
                        <th>FullInstructions</th>
                        <th>Instructions</th>
                        <th>Group</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var fed in Model.FederalDeficiencies)
            {
                        <tr id="@fed.Id" data-full-instructions="@fed.Instructions">
                            <td>@fed.TagCode</td>
                            <td>
                                @fed.Description
                                <a class="lessDesc float-right" href="">Less...</a>
                            </td>
                            <td>
                                @fed.Description
                            </td>
                            <td>
                                @fed.Instructions
                                <div class="float-right">
                                    <a class="editInst" href="">Edit</a>
                                    <a class="lessInst" href="">Less...</a>
                                </div>
                            </td>
                            <td>
                                @fed.Instructions
                                <div class="float-right">
                                    <a class="editInst" href="">Edit</a>
                                </div>
                            </td>
                            <td>@Html.DropDownList("Group", new SelectList(Model.DeficiencyGroups.Where(g => g.GroupType == "Federal"), "Id", "Description", fed.DeficiencyGroupId), string.Empty, new { @class = "Group" })
                        </tr>
                    }
                </tbody>
            </table>

        </div>
        <div id="safeDef">
            <table id="safetyDeficiencies">
                <thead>
                    <tr>
                        <th>Tag</th>
                        <th>FullDescription</th>
                        <th>Description</th>
                        <th>FullInstructions</th>
                        <th>Instructions</th>
                        <th>Group</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var safe in Model.SafetyDeficiencies)
            {
                        <tr id="@safe.Id" data-full-instructions="@safe.Instructions">
                            <td>@safe.TagCode</td>
                            <td>
                                @safe.Description
                                <a class="lessDesc float-right" href="">Less...</a>
                            </td>
                            <td>
                                @safe.Description
                            </td>
                            <td>
                                @safe.Instructions
                                <div class="float-right">
                                    <a class="editInst" href="">Edit</a>
                                    <a class="lessInst" href="">Less...</a>
                                </div>
                            </td>
                            <td>
                                @safe.Instructions.Truncate(80, true)
                                <div class="float-right">
                                    <a class="editInst" href="">Edit</a>
                                    @if (safe.Instructions.LengthExceeds(80))
                                    {
                                        <a class="moreInst float-right" href="">More...</a>
                                    }
                                </div>
                            </td>
                            <td>@Html.DropDownList("Group", new SelectList(Model.DeficiencyGroups.Where(g => g.GroupType == "Safety"), "Id", "Description", safe.DeficiencyGroupId), string.Empty, new { @class = "Group" })
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div id="DeficiencyGroupsWrapper">
            <table id="deficiencyGroups">
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>Description</th>
                        <th>Sort Order</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var group in Model.DeficiencyGroups)
            {
                        <tr id="@group.Id">
                            <td>@group.GroupType</td>
                            <td>@group.Description</td>
                            <td>@group.SortOrder</td>
                            <td>
                                <a class="edit" href="">Edit</a>
                            </td>
                            <td>
                                <a class="delete" href="">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div id="NewDeficiencyGroup">
                @await Component.InvokeAsync("CreateDeficiencyGroup")
            </div>
        </div>
        <div id="CommunityTableWrapper">
            <table id="CommunityTable">
                <thead>
                    <tr>
                        <th>Facility</th>
                        <th>State</th>
                        <th>Region</th>
                        <th>Use in Display</th>
                        <th>Report Flag</th>
                        <th>Notification Recipients</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var com in Model.AdminViewModel.Communities.OrderByDescending(c => c.IsCommunityFlg).ThenBy(c => c.CommunityShortName))
            {
                        <tr>
                            <td>@com.CommunityShortName</td>
                            <td>@com.StateCd</td>
                            <td>@Model.AdminViewModel.Regions.Single(r => r.RegionId == com.RegionId).RegionName</td>
                            <td>@Html.CheckBoxFor(m => m.AdminViewModel.ApplicationCommunityInfos.Single(aci => aci.CommunityId == com.CommunityId).DataEntryFlg, new { id = com.CommunityId, @class = "checkbox" })</td>
                            <td>@Html.CheckBoxFor(m => m.AdminViewModel.ApplicationCommunityInfos.Single(aci => aci.CommunityId == com.CommunityId).ReportFlg, new { id = com.CommunityId, @class = "checkboxReport" })</td>
                            <td>@Html.ActionLink("Manage Notification Recipients", "GetNotificationRecipients", new { id = com.CommunityId }, new { @class = "manage-recipients" })</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>


</div>





<div id="InstructionsWindow">
    @await Component.InvokeAsync("Instructions")
</div>
<div id="recipientsModal" align="center">
    This is placeholder content!
</div>
<environment names="Development">
    <script src="~/js/MockSurveyAdmin.js" asp-append-version="true"></script>
</environment>
<environment names="Testing,Production,Training">
    <script src="~/js/MockSurveyAdmin.min.js" asp-append-version="true"></script>
</environment>
<script type="text/javascript">
    $(document).ready(function () {
        PreparePage();
    });
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

