@model AtriumWebApp.Web.Survey.Models.ViewModel.SurveyViewModel
@{
    ViewBag.Title = "Survey";
}
<style type="text/css">
    .startRowWidth {
        width: 90px !important;
    }

    .citationLink {
        margin: 30px 0 30px 20px;
    }

    .dopShow {
        visibility: hidden;
    }

    .stateShow {
        visibility: hidden;
    }

    .waiverShow {
        visibility: hidden;
    }
</style>
<div id="survey" class="layout-1378">
    <div class="row margin_separator">
        <div class="col3">
            <section id="surveySideBar">
                @using (Html.BeginForm("SideDDL", "Survey", FormMethod.Post, new { id = "SideDDL" }))
                {
                    @Html.LabelFor(m => m.SelectedCommunity, "Community:")<br />
                    @Html.DropDownListFor(m => m.SelectedCommunity, Model.Communities, new { onChange = "this.form.submit();" })
                }
            </section>
        </div>
        <div class="col3">&nbsp;</div>
        <div class="col3" style="font-size: 1.5em">
            @{ 
                string facilityName;
                Context.Session.TryGetObject("CSUCurrentFacilityName", out facilityName);
            }
            Survey for: @facilityName
        </div>
        <div class="row-end">&nbsp;</div>
    </div>
    <div class="row">
        <div class="col1">&nbsp;</div>
        <div class="col2 bold">Survey Details</div>
        <div class="col9">&nbsp;</div>
        <div class="col2 bold">Remedies</div>
        <div class="row-end">&nbsp;</div>
    </div>
    @using (Html.BeginForm("SaveMainSurvey", "Survey", FormMethod.Post, new { id = "SaveMainSurvey", SaveMainSurvey = Model } ))
    {
        @Html.HiddenFor(m => m.CurrentSurvey.SurveyCycleId)
        @Html.HiddenFor(m => m.CurrentSurvey.SurveyId)
        @Html.Hidden("CreateFollowUp")
        <div class="row margin_separator">
            <div class="col9" style="border-top: 1px solid black; border-left: 1px solid black; border-bottom: 1px solid black; height: 129px; padding-top: 15px;">
                <div class="row">
                    <div class="col2 startRowWidth">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.SurveyTypeId, "Survey Type:")</div>
                    </div>
                    <div class="col1">@Html.DropDownListFor(m => m.CurrentSurvey.SurveyTypeId, Model.SurveyTypes, new { id = "SelectedSurveyType" })</div>
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.SurveyId, "Survey in Cycle:")</div>
                    </div>
                    <div class="col1">@Html.TextBoxFor(m => m.CurrentSurvey.SurveyId, new { size = "10", disabled = "disabled" })</div>
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.DaysOut, "Days Out:")</div>
                    </div>
                    <div class="col1">@Html.TextBoxFor(m => m.DaysOut, new { size = "10", disabled = "disabled" })</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2 startRowWidth">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.EnterDate, "Entry Date:")</div>
                    </div>
                    <div class="col1">@Html.EditorFor(m => m.CurrentSurvey.EnterDate, new { size = "10", id = "DateEntry" })</div>
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.Form2567ReceiveDate, "2567 Received:")</div>
                    </div>
                    <div class="col1">@Html.EditorFor(m => m.CurrentSurvey.Form2567ReceiveDate, new { size = "10", id = "Date2567" })</div>
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.PotentialDOPDate, "Potential DOP Date:")</div>
                    </div>
                    <div class="col1">@Html.EditorFor(m => m.CurrentSurvey.PotentialDOPDate, new { size = "10", id = "DateDOP" })</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2 startRowWidth">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.ExitDate, "Exit Date:")</div>
                    </div>
                    <div class="col1">@Html.EditorFor(m => m.CurrentSurvey.ExitDate, new { size = "10", id = "DateExit" })</div>
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.CertainDate, "Date Certain:")</div>
                    </div>
                    <div class="col1">@Html.EditorFor(m => m.CurrentSurvey.CertainDate, new { size = "10", id = "DateCertain" })</div>
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.PotentialTermDate, "Potential Term Date:")</div>
                    </div>
                    <div class="col1">@Html.EditorFor(m => m.CurrentSurvey.PotentialTermDate, new { size = "10", id = "DateTerm" })</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2 startRowWidth">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.AtriumPayerGroupCode, "Payer Group:")</div>
                    </div>
                    @if (Model.CurrentSurvey != null && Model.FederalCitations.Count > 0)
                    {
                        <div class="col3 payer-group-readonly" id="ReadonlyPayerGroup">
                            @Model.SurveyPayerGroups.Single(m => m.Value == Model.CurrentSurvey.AtriumPayerGroupCode).Text
                        </div>
                        <div class="col3 payer-group" style="display: none;">
                            @Html.DropDownListFor(m => m.CurrentSurvey.AtriumPayerGroupCode, Model.SurveyPayerGroups)
                        </div>
                    }
                    else
                    {
                        <div class="col3 payer-group-readonly" id="ReadonlyPayerGroup" style="display: none;">
                            @(Model.CurrentSurvey == null ? string.Empty : Model.SurveyPayerGroups.Single(m => m.Value == Model.CurrentSurvey.AtriumPayerGroupCode).Text)
                        </div>
                        <div class="col3 payer-group">
                            @Html.DropDownListFor(m => m.CurrentSurvey.AtriumPayerGroupCode, Model.SurveyPayerGroups)
                        </div>
                    }
                    <div class="col1">&nbsp;</div>
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.FollowUpDate, "Follow Up Date:")</div>
                    </div>
                    <div class="col1">@Html.EditorFor(m => m.CurrentSurvey.FollowUpDate, new { size = "10", id = "DateFollowUp" })</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                @if (Model.CurrentSurvey != null && Model.FederalCitations.Count > 0)
                {
                    <div class="row payer-group-readonly">
                        <div class="col2 startRowWidth">&nbsp;</div>
                        <div class="col6"><strong>Payer Group cannot be changed if there are federal citations.</strong></div>
                    </div>
                }
                else
                {
                    <div class="row payer-group-readonly" style="display: none;">
                        <div class="col2 startRowWidth">&nbsp;</div>
                        <div class="col6"><strong>Payer Group cannot be changed if there are federal citations.</strong></div>
                    </div>
                }
            </div>
            <div class="col3" style="border-top: 1px solid black; border-right: 1px solid black; border-bottom: 1px solid black; margin-left: 0; height:144px;">
                <div class="row">
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.ClosedFlg, "Survey Closed:")</div>
                    </div>
                    <div class="col1">@Html.CheckBoxFor(m => m.CurrentSurvey.ClosedFlg)</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.SQCFlg, "SQC:")</div>
                    </div>
                    <div class="col1">@Html.CheckBoxFor(m => m.CurrentSurvey.SQCFlg)</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.ImmediateJeopardyFlg, "Imm. Jeopardy:")</div>
                    </div>
                    <div class="col1">@Html.CheckBoxFor(m => m.CurrentSurvey.ImmediateJeopardyFlg)</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.DidNotClearFollowUpFlg, "Did Not Clear FU:")</div>
                    </div>
                    <div class="col1">@Html.CheckBoxFor(m => m.CurrentSurvey.DidNotClearFollowUpFlg)</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.UnsubstantiatedComplaintFlg, "Unsub Complaint:", new { @class = "IsUnsubstantianted", disabled = "disabled" })</div>
                    </div>
                    <div class="col1">@Html.CheckBoxFor(m => m.CurrentSurvey.UnsubstantiatedComplaintFlg, new { @class = "IsUnsubstantianted", disabled = "disabled" })</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.SelfReportFlg, "Self Report:")</div>
                    </div>
                    <div class="col1">@Html.CheckBoxFor(m => m.CurrentSurvey.SelfReportFlg)</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.FederalMonitoringFlg, "Fed Monitoring Survey:")</div>
                    </div>
                    <div class="col1">@Html.CheckBoxFor(m => m.CurrentSurvey.FederalMonitoringFlg)</div>
                    <div class="row-end">&nbsp;</div>
                </div>
            </div>
            <div class="col4" style="border: 1px solid black; padding: 5px 38px 5px 5px; margin-left: 10px;">
                <div class="row">
                    <div class="col1">
                        @Html.LabelFor(m => m.CurrentSurvey.DOPFlg, "DOP:")@Html.CheckBoxFor(m => m.CurrentSurvey.DOPFlg)
                    </div>
                    <div class="col2 dopShow">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.DOPStartDate, "DOP Start Date:")</div>
                    </div>
                    <div class="col1 dopShow">@Html.EditorFor(m => m.CurrentSurvey.DOPStartDate, new { size = "10", id = "DateDOPStart", disabled = "disabled" })</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col1">
                        &nbsp;
                    </div>
                    <div class="col2 dopShow">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.DOPEndDate, "DOP End Date:")</div>
                    </div>
                    <div class="col1 dopShow">@Html.EditorFor(m => m.CurrentSurvey.DOPEndDate, new { size = "10", id = "DateDOPEnd", disabled = "disabled" })</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col1">
                        &nbsp;
                    </div>
                    <div class="col2 dopShow">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.DOPDailyAmount, "DOP Daily Amount:")</div>
                    </div>
                    <div class="col1 dopShow">@Html.EditorFor(m => m.CurrentSurvey.DOPDailyAmount, new { size = "10", disabled = "disabled" })</div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col1" style="width: 88px;">
                        @Html.LabelFor(m => m.CurrentSurvey.StateFineFlg, "State Fine:")@Html.CheckBoxFor(m => m.CurrentSurvey.StateFineFlg)
                    </div>
                    <div class="col2 stateShow" style="margin-left: 0">
                        <div class="float-right">@Html.LabelFor(m => m.CurrentSurvey.StateFineAmount, "State Fine Amount:")</div>
                    </div>
                    <div class="col1 stateShow">@Html.EditorFor(m => m.CurrentSurvey.StateFineAmount, new { size = "10", disabled = "disabled" })</div>
                    <div class="row-end">&nbsp;</div>
                </div>
            </div>
            <div class="row-end">&nbsp;</div>
        </div>
        <div class="row" style="padding-top: 15px;">
            <div class="col7">&nbsp;</div>
            <div class="col1">
                <button type="button" id="submitSurvey">Save</button>
            </div>
            <div class="col1">
                <button type="button" id="clearSurvey">Clear</button>
            </div>
            <div class="row-end">&nbsp;</div>
        </div>
    }
    <div class="row">
        <div class="col1">&nbsp;</div>
        <div class="col2 bold">Citations</div>
        <div class="col6">&nbsp;</div>
        <div class="col2 bold">CMP</div>
        <div class="row-end">&nbsp;</div>
    </div>
    <div class="row margin_separator">
        <div class="col8" style="border: 1px solid black; padding: 15px;">
            <div class="row">
                <div class="col2">
                    <div class="row citationLink">
                        <div class="col2">
                            <a id="NewFederal" href="">New Federal Citation</a>
                        </div>
                        <div class="row-end">&nbsp;</div>
                    </div>
                    <div class="row citationLink">
                        <div class="col2">
                            <a id="NewState" href="">New State Citation</a>
                        </div>
                        <div class="row-end">&nbsp;</div>
                    </div>
                    <div class="row citationLink">
                        <div class="col2">
                            <a id="NewSafety" href="">New Safety Citation</a>
                        </div>
                        <div class="row-end">&nbsp;</div>
                    </div>
                </div>
                <div class="col6">
                    <table id="CitationsTable">
                        <thead>
                            <tr>
                                <th>Type</th>
                                <th>Tag</th>
                                <th>DeficiencyId</th>
                                <th>SAS</th>
                                <th>SASId</th>
                                <th>Waiver</th>
                                <th>Comments</th>
                                <th>Edit</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.CurrentSurvey != null)
                            {
                                foreach (var fed in Model.FederalCitations)
                                {
                                    <tr id="@fed.Id">
                                        <td>Federal</td>
                                        <td>@Model.FederalDeficiencies.Single(f => f.Id == fed.FederalDeficiencyId).TagCode</td>
                                        <td>@fed.FederalDeficiencyId</td>
                                        <td>@Model.ScopeAndSeverity.Single(s => s.SASId == fed.SASId).SASCode</td>
                                        <td>@fed.SASId</td>
                                        <td></td>
                                        <td>@fed.Comments</td>
                                        <td><a class="edit" href="">Edit</a></td>
                                        <td><a class="delete" href="">Delete</a></td>
                                    </tr>
                                }
                                foreach (var state in Model.StateCitations)
                                {
                                    <tr id="@state.Id">
                                        <td>State</td>
                                        <td>@Model.StateDeficiencies.Single(s => s.Id == state.StateDeficiencyId).TagCode</td>
                                        <td>@state.StateDeficiencyId</td>
                                        <td>@(state.SASId != null ? Model.ScopeAndSeverity.Single(s => s.SASId == state.SASId).SASCode : "")</td>
                                        <td>@state.SASId</td>
                                        <td></td>
                                        <td>@state.Comments</td>
                                        <td><a class="edit" href="">Edit</a></td>
                                        <td><a class="delete" href="">Delete</a></td>
                                    </tr>
                                }
                                foreach (var safety in Model.SafetyCitations)
                                {
                                    <tr id="@safety.Id">
                                        <td>Safety</td>
                                        <td>@Model.SafetyDeficiencies.Single(s => s.Id == safety.SafetyDeficiencyId).TagCode</td>
                                        <td>@safety.SafetyDeficiencyId</td>
                                        <td>@(safety.SASId != null ? Model.ScopeAndSeverity.Single(s => s.SASId == safety.SASId).SASCode : "")</td>
                                        <td>@safety.SASId</td>
                                        <td>@(safety.WaiverFlg ? "Yes" : "No")</td>
                                        <td>@safety.Comments</td>
                                        <td><a class="edit" href="">Edit</a></td>
                                        <td><a class="delete" href="">Delete</a></td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        @using (Html.BeginForm("SaveCMP", "Survey", FormMethod.Post, new { id = "SaveCMP" }))
        {
            @Html.Hidden("CMPEditingId")
            <div class="col7" style="border: 1px solid black; padding: 15px 50px 15px 15px; margin-left: 10px;">
                <div class="row">
                    <div class="col2">
                        @Html.Label("35% Discount")@Html.CheckBox("Discount")
                    </div>
                    <div class="col1">
                        @Html.Label("Daily:")@Html.CheckBox("Daily", true)
                    </div>
                    <div class="col2">
                        @Html.Label("Instance:")@Html.CheckBox("Instance")
                    </div>
                    <div class="col2">
                        <div class="float-right">@Html.Label("Amount YTD:")</div>
                    </div>
                    <div class="col2">
                        @Html.TextBox("CMPAmountYTD", Model.CMPYTD.ToString("C"), new { disabled = "disabled" })
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row dailyShow">
                    <div class="col2">
                        <div class="float-right">@Html.Label("From:")</div>
                    </div>
                    <div class="col2">
                        @Html.TextBox("DateCMPFrom")
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row dailyShow">
                    <div class="col2">
                        <div class="float-right">@Html.Label("To:")</div>
                    </div>
                    <div class="col2">
                        @Html.TextBox("DateCMPTo")
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row instanceShow" style="display: none">
                    <div class="col2">
                        <div class="float-right">@Html.Label("Instance Date:")</div>
                    </div>
                    <div class="col2">
                        @Html.TextBox("DateInstance", "", new { @class = "hidden" })
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2">
                        <div class="float-right">@Html.Label("Amount:")</div>
                    </div>
                    <div class="col2">
                        @Html.TextBox("CMPAmount")
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col2">&nbsp;</div>
                    <div class="col1">
                        <button type="button" id="submitCMP">Save</button>
                    </div>
                    <div class="col1">
                        <button type="button" id="clearCMP">Clear</button>
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
                <div class="row">
                    <div class="col6">
                        <table id="CMPTable">
                            <thead>
                                <tr>
                                    <th>Daily</th>
                                    <th>Instance</th>
                                    <th>Start/Instance Date</th>
                                    <th>End Date</th>
                                    <th>Amount</th>
                                    <th>AmountDecimal</th>
                                    <th>Edit</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.CurrentSurvey != null)
                                {
                                    foreach (var cmp in Model.CivilMonetaryPenalties)
                                    {
                                        <tr id="@cmp.CMPId">
                                            <td>@(cmp.DailyFlg ? "Yes" : "No")</td>
                                            <td>@(cmp.InstanceFlg ? "Yes" : "No")</td>
                                            <td>@(cmp.InstanceFlg ? string.Format("{0:d}", cmp.CMPInstanceDate) : string.Format("{0:d}", cmp.CMPStartDate))</td>
                                            <td>@string.Format("{0:d}", cmp.CMPEndDate)</td>
                                            <td>@cmp.CMPAmount.ToString("C")</td>
                                            <td>@cmp.CMPAmount.ToString("0.00")</td>
                                            <td><a class="edit" href="">Edit</a></td>
                                            <td><a class="delete" href="">Delete</a></td>
                                            <td>@(cmp.DiscountFlg ? "Yes" : "No")</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="row-end">&nbsp;</div>
                </div>
            </div>
        }
        <div class="row-end">&nbsp;</div>
    </div>
    <div class="row">
        <div class="col1 bold">&nbsp;</div>
        <div class="col2 bold">Documents</div>
        <div class="col1 bold">
            <button type="button" id="addSurveyDocument">Add</button>
        </div>
        <div class="col10 bold">&nbsp;</div>
        <div class="row-end">&nbsp;</div>
    </div>
    @using (Html.BeginForm("SaveDocumentsSurvey", "Survey", FormMethod.Post, new { id = "SaveDocumentsSurvey", enctype = "multipart/form-data" }))
    {
        <div class="row margin_separator" style="border: 1px solid black; padding: 15px; width: 1336px; max-width: 1336px;">
            <div class="col12">
                <table id="surveyDocuments" class="margin-separator">
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Documents != null && Model.Documents.Count > 0)
                        {
                            foreach (AtriumWebApp.Web.Survey.Models.ViewModel.SurveyDocumentViewModel sdvm in Model.Documents)
                            {
                                @Html.EditorFor(m => sdvm)
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="row-end">&nbsp;</div>
        </div>
    }
    <div class="row">
        <div class="col8">&nbsp;</div>
        <div class="col8">
            @using (Html.BeginForm("UpdateRange", "Survey", FormMethod.Post, new { id = "UpdateRangeCSU" }))
            {
                string CSUoccurredRangeFrom;
                Context.Session.TryGetObject("CSUoccurredRangeFrom", out CSUoccurredRangeFrom);
                string CSUoccurredRangeTo;
                Context.Session.TryGetObject("CSUoccurredRangeTo", out CSUoccurredRangeTo);

                @Html.Label("Enter Date Range - From: ")
                @Html.TextBox("occurredRangeFrom", CSUoccurredRangeFrom, new { @class = "dateUS", size = "10" })
                @Html.Label("To: ")
                @Html.TextBox("occurredRangeTo", CSUoccurredRangeTo, new { @class = "dateUS", size = "10" })
                @Html.Hidden("returnUrl", Context.UrlPath());
                <input id="submit" name="submit" type="submit" value="Update" />
            }
            @{
                string ToDateRangeInvalid;
                Context.Session.TryGetObject("ToDateRangeInvalid", out ToDateRangeInvalid);
                string ToDateRangeInFuture;
                Context.Session.TryGetObject("ToDateRangeInFuture", out ToDateRangeInFuture);
                string FromDateRangeInvalid;
                Context.Session.TryGetObject("FromDateRangeInvalid", out FromDateRangeInvalid);
                string FromDateRangeInFuture;
                Context.Session.TryGetObject("FromDateRangeInFuture", out FromDateRangeInFuture);
                string FromAfterTo;
                Context.Session.TryGetObject("FromAfterTo", out FromAfterTo);
            }

            @Html.Hidden("ToDateRangeInvalid", ToDateRangeInvalid)
            @Html.Hidden("ToDateRangeInFuture", ToDateRangeInFuture)
            @Html.Hidden("FromDateRangeInvalid", FromDateRangeInvalid)
            @Html.Hidden("FromDateRangeInFuture", FromDateRangeInFuture)
            @Html.Hidden("FromAfterTo", FromAfterTo)
        </div>
        <div class="row-end">&nbsp;</div>
    </div>
    <div class="row">
        <div class="col2">&nbsp;</div>
        <div class="col12">
            <table id="SurveyTable">
                <thead>
                    <tr>
                        <th>Survey Type</th>
                        <th>Entry Date</th>
                        <th>Exit Date</th>
                        <th>Payer Group</th>
                        <th>Date Certain</th>
                        <th>SQC</th>
                        <th>Immediate Jeopardy</th>
                        <th>Did Not Clear Follow Up</th>
                        <th>Survey Closed</th>
                        <th>Edit</th>
                        <th>Delete</th>
                        <th>Follow Up</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var survey in Model.Surveys)
                    {
                        <tr id="@survey.SurveyCycleId @survey.SurveyId">
                            <td>@Model.SurveyTypesAll.Single(st => st.SurveyTypeId == survey.SurveyTypeId).SurveyTypeDesc</td>
                            <td>@survey.EnterDate.ToString("d")</td>
                            <td>@string.Format("{0:d}", survey.ExitDate)</td>
                            <td>@survey.AtriumPayerGroup.AtriumPayerGroupName</td>
                            <td>@string.Format("{0:d}", survey.CertainDate)</td>
                            <td>@(survey.SQCFlg ? "Yes" : "No")</td>
                            <td>@(survey.ImmediateJeopardyFlg ? "Yes" : "No")</td>
                            <td>@(survey.DidNotClearFollowUpFlg ? "Yes" : "No")</td>
                            <td>@(survey.ClosedFlg ? "Yes" : "No")</td>
                            <td><a class="edit" href="">Edit</a></td>
                            <td><a class="delete" href="">Delete</a></td>
                            <td><a class="followup" href="">Create Follow Up</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@foreach (var group in Model.SurveyPayerGroups)
{
    @Html.DropDownList("FedDefData" + group.Value, new SelectList(Model.FederalDeficiencies.Where(d => d.AtriumPayerGroupCode == group.Value), "Id", "TagCode"), new { style = "display: none" })
}
@using (Html.BeginForm("SaveCitation", "Survey", FormMethod.Post, new { id = "SaveCitation" }))
{
    @Html.Hidden("EditingId")
    @Html.Hidden("CitationType")
    <div class="Citation" align="center">
        <button class="float-right" type="button" id="close">X</button>
        <h2 class="margin_separator" id="CitationTitle"></h2>
        <div class="container_16">
            <div class="grid_3">
                <div class="float-right">@Html.Label("Deficiency Tag:")</div>
            </div>
            <div class="grid_2">
                @if (Model.CurrentSurvey == null)
                {
                    @Html.DropDownList("FedDef", new SelectList(Model.FederalDeficiencies.Where(d => d.AtriumPayerGroupCode == "SNF"), "Id", "TagCode"), new { style = "display: none" })
                }
                else
                {
                    @Html.DropDownList("FedDef", new SelectList(Model.FederalDeficiencies.Where(d => d.AtriumPayerGroupCode == Model.CurrentSurvey.AtriumPayerGroupCode), "Id", "TagCode"), new { style = "display: none" })
                }
                @Html.DropDownList("SafetyDef", new SelectList(Model.SafetyDeficiencies, "Id", "TagCode"), new { style = "display: none" })
                @Html.DropDownList("StateDef", new SelectList(Model.StateDeficiencies, "Id", "TagCode"), new { style = "display: none" })
            </div>
        </div>
        <div class="container_16">
            <div class="grid_3">
                <div class="float-right">@Html.Label("Scope Severity:")</div>
            </div>
            <div class="grid_2">
                @Html.DropDownList("SASNotRequired", new SelectList(Model.ScopeAndSeverity, "SASId", "SASCode"), "--", new { id = "SASNotRequired", style = "display:none" })
                @Html.DropDownList("SAS", new SelectList(Model.ScopeAndSeverity, "SASId", "SASCode"), new { style = "display:none" })
            </div>
        </div>
        <div class="container_16 waiverShow">
            <div class="grid_3">
                <div class="float-right">@Html.Label("Waiver:")</div>
            </div>
            <div class="grid_2">
                @Html.CheckBox("Waiver")
            </div>
            <div class="row-end">&nbsp;</div>
        </div>
        <div class="container_16 bottom_pad">
            <div class="grid_3">
                @Html.Label("Comments:")
            </div>
            <div class="row-end">&nbsp;</div>
        </div>
        <div class="container_16 bottom_pad">
            <div class="grid_5">
                @Html.TextArea("Comments", "", 4, 40, new { maxlength = "1024" })
            </div>
            <div class="row-end">&nbsp;</div>
        </div>
        <div class="container_16">
            <div class="grid_2">&nbsp;</div>
            <div class="grid_2"></div>
            <div class="row-end">&nbsp;</div>
        </div>
        <div class="container_16 bottom_pad">
            <div class="grid_2">&nbsp;</div>
            <div class="grid_1">
                <button type="button" id="submitCitation" style="margin-left: 29px;">Save</button>
            </div>
        </div>
    </div>
}
<environment names="Development">
    <script src="~/js/Survey.js" asp-append-version="true"></script>
</environment>
<environment names="Testing,Production,Training">
    <script src="~/js/Survey.min.js" asp-append-version="true"></script>
</environment>
